<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dimebrain.TweetSharp</name>
    </assembly>
    <members>
        <member name="T:Dimebrain.TweetSharp.Model.YammerEmailAddress">
            <summary>
            Represent's a user's email address
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.IYammerModel">
            <summary>
            Interface for classes that represent the Yammer data model. 
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerEmailAddress.EmailType">
            <summary>
            The type of address (primary, personal, etc...)
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerEmailAddress.Address">
            <summary>
            The email address
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.YammerNodeBase">
            <summary>
            The base implementation for fluent query nodes on an <see cref="T:Dimebrain.TweetSharp.Fluent.IFluentYammer"/> instance.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.IYammerNode">
            <summary>
            The interface describing a node in the fluent expression tree.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.IYammerLeafNode">
            <summary>
            The interface describing a Yammer leaf node in the fluent expression tree.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.Extensions">
            <summary>
            Extension methods for search parameters.
            </summary>
            <summary>
            Extention Methods for Messages
            </summary>
            <summary>
            Extension methods for Authentication
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseUpdateTruncation(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration)">
            <summary>
            When this configuration option is called, any status updates that are longer than the
            140 character option are truncated prior to sending. By default, updates longer than
            140 characters will throw a <see cref="T:Dimebrain.TweetSharp.Core.Exceptions.TweetSharpException"/>
            </summary>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseUrlShortening(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration)">
            <summary>
            When this configuration option is called, any valid URLs found in user status text
            are sent out of band to the default URL shortening service provider, with the shortened
            URL replacing the longer one.
            </summary>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseUrlShortening(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider)">
            <summary>
            When this configuration option is called, any valid URLs found in user status text
            are sent out of band to the specificed URL shortening service provider, with the shortened
            URL replacing the longer one.
            </summary>
            <param name="type">The URL service provider to use</param>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseUrlShortening(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider,System.String,System.String)">
            <summary>
            When this configuration option is called, any valid URLs found in user status text
            are sent out of band to the specificed URL shortening service provider, with the shortened
            URL replacing the longer one.</summary>
            <param name="type">The URL service provider to use</param>
            <param name="username">The username to pass to the URL service provider</param>
            <param name="password">The password to pass to the URL service provider</param>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseUrlShortening(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider,System.String)">
            When this configuration option is called, any valid URLs found in user status text
            are sent out of band to the specificed URL shortening service provider, with the shortened
            URL replacing the longer one.
            <param name="type">The URL service provider to use</param>
            <param name="apiKey">The API key to pass to the URL service provider</param>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CacheWith(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,Dimebrain.TweetSharp.Core.Caching.IClientCache)">
            <summary>
            When this configuration option is called, the specified cache provider is used for any subsequent
            caching on the request. The default caching strategy is this method is not used, is <see cref="T:Dimebrain.TweetSharp.Core.Caching.AspNetCache"/>.
            </summary>
            <param name="cache">The caching strategy to use</param>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CacheUntil(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,System.DateTime)">
            <summary>
            When this configuration option is called, any request made inside the specified absolute expiration date,
            is served from the client cache rather than from a request made to Twitter.
            </summary>
            <param name="absoluteExpiration">The specified local time that the cache for the request as defined will expire</param>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CacheForInactivityOf(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,System.TimeSpan)">
            <summary>
            When this configuration option is called, any request made inside the specified sliding expiratino date,
            is served from the client cache rather than from a request made to Twitter. Sliding expiration countdown begins
            from the last time a request for the same URL was executed.
            </summary>
            <param name="slidingExpiration">The specified amount of inactivity that may elapse before expiring the cache</param>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseRateLimiting(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,System.Predicate{Dimebrain.TweetSharp.Model.TwitterRateLimitStatus},System.Func{Dimebrain.TweetSharp.Model.TwitterRateLimitStatus})">
            <summary>
            Throttles recurring task using a calculation, using the return value from the predicate to determine if the task should run
            </summary>
            <param name="instance">The instance.</param>
            <param name="predicate">Predicate - will not run query if false is returned.</param>
            <param name="getRateLimitFunction">User provided function to get the RateLimit status</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseRateLimiting(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,System.Double)">
            <summary>
            Throttles recurring task using a calculation, limiting it to a percentage of the periodic total rate limit
            </summary>
            <param name="instance">The instance.</param>
            <param name="percentOfTotalLimit">Percentage of the user's total rate limit to allocate for this recurring request</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseRateLimiting(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,System.Double,System.Func{Dimebrain.TweetSharp.Model.TwitterRateLimitStatus})">
            <summary>
            Throttles recurring task using a calculation, limiting it to a percentage of the periodic total rate limit
            </summary>
            <param name="instance">The instance.</param>
            <param name="percentOfTotalLimit">Percentage of the user's total rate limit to allocate for this recurring request</param>
            <param name="getRateLimitFunction">User provided function to get the rate limit status</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseProxy(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,System.String)">
            <summary>
            When this configuration option is called, the query request is sent via the specified proxy URL,
            rather than directly to Twitter.
            <remarks>
            Currently, the .NET default of using the Internet Explorer defined proxy as a default for all
            outgoing requests is in place, but may change before the version 1.0 release.
            </remarks>
            </summary>
            <param name="url">The URL of a proxy to use</param>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseTransparentProxy(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,System.String)">
            <summary>
            Uses the transparent proxy instead of calling twitter directly
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="url">The transparent proxy URL.</param>
            <returns>The FluentTwitter instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseGzipCompression(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration)">
            <summary>
            When this configuration option is called, the query request is sent as GZIP encoded content,
            and automatically decompressed when received. This is useful for requests that retrieve a large
            number of results, but will increase bandwidth on smaller requests.
            </summary>
            <param name="instance">The current position in the fluent expression</param>
            <returns>The current position in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.DisableMocking(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration)">
            <summary>
            Disables the mocking.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UseAutomaticRetries(Dimebrain.TweetSharp.Fluent.IFluentTwitterConfiguration,Dimebrain.TweetSharp.Fluent.RetryOn,System.Int32)">
            <summary>
            Sets up automatic retries for the error conditions indicated in 'retryPolicies'
            </summary>
            <param name="instance">The intance</param>
            <param name="retryOn">The error condition(s) that trigger a retry</param>
            <param name="maximumRetries">Max number of times to retry.  If exhausted, the last error will be returned</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFriends(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds)">
            <summary>
            Gets IDs of the friends of the authenticated user
            </summary>
            <param name="instance">The instance.</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFriendsOf(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds,System.Int32)">
            <summary>
            Gets IDs of the friends of the specified user
            </summary>
            <param name="instance">The instance.</param>
            <param name="id">The id of the user to get the friends of.</param>
            <returns>The Instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFriendsOf(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds,System.Int64)">
            <summary>
            Gets IDs of the friends of the specified user
            </summary>
            <param name="instance">The instance.</param>
            <param name="id">The id of the user to get the friends of.</param>
            <returns>The Instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFriendsOf(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds,System.String)">
            <summary>
            Gets IDs of the friends of the specified user
            </summary>
            <param name="instance">The instance.</param>
            <param name="screenName">Screen name of user to get the friends of.</param>
            <returns>the Instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFollowers(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds)">
            <summary>
            Gets the IDs of the followers of the authenticated user
            </summary>
            <param name="instance">The instance.</param>
            <returns>The Instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFollowersOf(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds,System.Int32)">
            <summary>
            Gets the IDs of the followers of the specified user
            </summary>
            <param name="instance">The instance.</param>
            <param name="id">The id of the user whos followers to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFollowersOf(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds,System.Int64)">
            <summary>
            Gets the IDs of the followers of the specified user
            </summary>
            <param name="instance">The instance.</param>
            <param name="id">The id of the user whos followers to get.</param>
            <returns>the instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ForFollowersOf(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds,System.String)">
            <summary>
            Gets the IDs of the followers of the specified user
            </summary>
            <param name="instance">The instance.</param>
            <param name="screenName">The screen name of the user whos followers to get</param>
            <returns>the instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsSubscribers)">
            <summary>
            Gets the default cursor used to return the first page of results
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsSubscribers,System.Int64)">
            <summary>
            Gets the cursor used to return corresponding the page of results
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of results to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsMembers)">
            <summary>
            Gets the default cursor used to return the first page of results
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsMembers,System.Int64)">
            <summary>
            Gets the cursor used to return corresponding the page of results
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of results to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsGet)">
            <summary>
            Gets the default cursor used to return the first page of user lists.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsGet,System.Int64)">
            <summary>
            Gets the cursor used to return the corresponding page of user lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of friend/follower ids to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterUserFriends)">
            <summary>
            Gets the default cursor used to return the first page of friends
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterUserFriends,System.Int64)">
            <summary>
            Gets the cursor used to return corresponding the page of friends 
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of friend/follower ids to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.PostPhoto(Dimebrain.TweetSharp.Fluent.ITwitterPhotos,System.String)">
            <summary>
            Posts a photo inline to TwitPic during a request before making an API call to Twitter.
            This method should only be used with updating status, retweeting, or sending direct messages,
            as the new photo's URL is injected in the outgoing message; otherwise, the photo is posted but 
            the URL is lost.
            </summary>
            <param name="instance">The current query expression</param>
            <param name="path">A path to the image</param>
            <returns>The current query expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.PostPhoto(Dimebrain.TweetSharp.Fluent.ITwitterPhotos,System.String,Dimebrain.TweetSharp.Fluent.Services.SendPhotoServiceProvider)">
            <summary>
            Posts a photo inline during a request to a given provider, before making an API call to Twitter.
            This method should only be used with updating status, retweeting, or sending direct messages,
            as the new photo's URL is injected in the outgoing message; otherwise, the photo is posted but 
            the URL is lost.
            </summary>
            <param name="instance">The current query expression</param>
            <param name="path">A path to the image</param>
            <param name="provider">A photo posting service provider</param>
            <returns>The current query expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpPost(Dimebrain.TweetSharp.Fluent.ITwitterSavedSearchesDestroy)">
            <summary>
            Uses the HTTP POST verb to perform the action
            </summary>
            <param name="instance">The instance.</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpDelete(Dimebrain.TweetSharp.Fluent.ITwitterSavedSearchesDestroy)">
            <summary>
            Uses the HTTP DELETE verb to perform the action
            </summary>
            <param name="instance">The instance.</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.InLanguage(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets in a given language.
            Uses the two-letter ISO code, i.e. "en" to represent the language.
            </summary>
            <param name="instance"></param>
            <param name="languageCode"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.InLanguage(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Globalization.CultureInfo)">
            <summary>
            Searches for tweets in a given language. 
            Uses the two-letter ISO code, i.e. "en" to represent the language.
            Uses the given CultureInfo to locate a two-letter ISO code for the language.
            </summary>
            <param name="instance"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.InLocale(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets from a given language. For client searches.
            Uses the two-letter ISO code, i.e. "en" to represent the language.
            Currently only "ja" is effective.
            </summary>
            <param name="instance"></param>
            <param name="languageCode"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.InLocale(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Globalization.CultureInfo)">
            <summary>
            Indicates the search query phrase itself is in a given language.
            Uses the two-letter ISO code, i.e. "en" to represent the language.
            Currently only "ja" is effective.
            </summary>
            <param name="instance"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Take(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Int32)">
            <summary>
            Specifies the number of tweets to return per page result.
            </summary>
            <param name="instance"></param>
            <param name="tweetsPerPage"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Return(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Int32)">
            <summary>
            Specifies the number of tweets to return per page result.
            </summary>
            <param name="instance"></param>
            <param name="tweetsPerPage"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Skip(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Int32)">
            <summary>
            Specifies the page of tweets to return. Omitting this expression is equivalent to
            requesting the first page. The number of tweets per page is either a Twitter default,
            or the value provided using <seealso cref="M:Dimebrain.TweetSharp.Fluent.Extensions.Take(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Int32)"/>.
            </summary>
            <param name="instance"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Since(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Int32)">
            <summary>
            Returns only tweets since the last status ID.
            </summary>
            <param name="instance"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Since(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Int64)">
            <summary>
            Returns only tweets since the last status ID.
            </summary>
            <param name="instance"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Within(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Double)">
            <summary>
            Searches tweets within a given mile radius. This method must be used with the
            <seealso cref="M:Dimebrain.TweetSharp.Fluent.Extensions.Of(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Double,System.Double)"/> expression to provide a complete
            command. This will likely change with evolution of the Twitter API.
            </summary>
            <param name="instance"></param>
            <param name="miles"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Since(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.DateTime)">
            <summary>
            Returns only tweets that fall on or after the given date. Use the convenient
            extension methods provided for spanning time, i.e.
            <example>
                .Since(10.Days.Ago())
            </example>
            </summary>
            <param name="instance"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.SinceUntil(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.DateTime)">
            <summary>
            Returns only tweets that fall on or before a given date. Use the convenient
            extension methods provided for spanning time, i.e.
            <example>
                .SinceUntil(30.Minutes.Ago())
            </example>
            </summary>
            <param name="instance"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Of(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.Double,System.Double)">
            <summary>
            Use this method combined with <code>Within(double miles)</code> to search areas around geo locations
            </summary>
            <param name="instance"></param>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Of(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,Dimebrain.TweetSharp.Model.GeoLocation)">
            <summary>
            Use this method combined with <code>Within(double miles)</code> to search areas around geo locations
            </summary>
            <param name="instance"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.WithUser(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery)">
            <summary>
            Using this parameter will pre-pend the user's name before the status message in a search status
            result.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.SetVerifier(Dimebrain.TweetSharp.Fluent.Yammer.IFluentYammerAuthentication,System.String)">
            <summary>
            Sets the PIN provided by the service to the user
            </summary>
            <param name="instance">The fluent twitter instance.</param>
            <param name="pin">The pin obtained from the user who authorized the application.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.InReplyToStatus(Dimebrain.TweetSharp.Fluent.ITwitterStatusUpdate,System.Int32)">
            <summary>
            Sets the ID of the tweet that this status is in reply to
            </summary>
            <param name="instance">The instance.</param>
            <param name="id">The id of the tweet that this status is in reply to.</param>
            <returns>the instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.InReplyToStatus(Dimebrain.TweetSharp.Fluent.ITwitterStatusUpdate,System.Int64)">
            <summary>
            Sets the ID of the tweet that this status is in reply to
            </summary>
            <param name="instance">The instance.</param>
            <param name="id">The id of the tweet that this status is in reply to.</param>
            <returns>the instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.InReplyToStatus(Dimebrain.TweetSharp.Fluent.ITwitterStatusUpdate,Dimebrain.TweetSharp.Model.TwitterStatus)">
            <summary>
            Sets the ID of the tweet that this status is in reply to
            </summary>
            <param name="instance">The instance.</param>
            <param name="status">The tweet that this status is in reply to.</param>
            <returns>the instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpPost(Dimebrain.TweetSharp.Fluent.ITwitterFriendshipsDestroy)">
            <summary>
            Use the POST verb to perform this action
            </summary>
            <param name="instance">The instance.</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpDelete(Dimebrain.TweetSharp.Fluent.ITwitterFriendshipsDestroy)">
            <summary>
            Use the DELETE verb to perform this action
            </summary>
            <param name="instance">The instance.</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.Containing(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets containing the given phrase.
            </summary>
            <param name="instance"></param>
            <param name="phrase"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.NotContaining(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets that do not contain the given phrase.
            </summary>
            <param name="instance"></param>
            <param name="phrase"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.FromUser(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets from the given user.
            </summary>
            <param name="instance"></param>
            <param name="screenName"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ToUser(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets to the given user.
            </summary>
            <param name="instance"></param>
            <param name="screenName"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ContainingHashTag(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets containing the given hashtag.
            </summary>
            <param name="instance"></param>
            <param name="hashTag"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ReferencingUser(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery,System.String)">
            <summary>
            Searches for tweets in reference to the given user.
            </summary>
            <param name="instance"></param>
            <param name="screenName"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.WithNegativity(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery)">
            <summary>
            Searches for tweets with negative wording.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.WithPositivity(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery)">
            <summary>
            Searches for tweets with positive wording.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.WithNeutrality(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery)">
            <summary>
            Searches for tweets with neutral wording. Used as a way to
            reset previous sentiment selections on an existing query.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.WithQuestion(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery)">
            <summary>
            Searches for tweets containing a question
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.ContainingLinks(Dimebrain.TweetSharp.Fluent.ITwitterSearchQuery)">
            <summary>
            Searches for tweets that contain embedded links.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds)">
            <summary>
            Gets the default cursor used to return the first page of friend or follower ids
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds,System.Int64)">
            <summary>
            Gets the cursor used to return corresponding the page of friend or follower ids
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of friend/follower ids to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterUserFollowers)">
            <summary>
            Gets the default cursor used to return the first page of followers
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterUserFollowers,System.Int64)">
            <summary>
            Gets the cursor used to return corresponding the page of followers 
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of friend/follower ids to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.WithBacklog(Dimebrain.TweetSharp.Fluent.ITwitterStreamingFilter,System.Int32)">
            <summary>
            Requests a backlog of tweets before streaming live.
            Use a value between -150,000 and 150,000.
            If a negative value is passed, the stream will close after the backlog is sent.
            Note: You must have elevated access (greater than "default") to use this parameter.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Streaming-API-Documentation#count"/>
            <param name="instance">The query chain.</param>
            <param name="count">The number of previous statuses to backlog.</param>
            <returns>The query chain.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetRequestToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String,System.String)">
            <summary>
            Gets the request token.
            </summary>
            <param name="instance">The instance.</param>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="callbackUrl">The callback URL, which overrides the URL set via Twitter.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetRequestToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String)">
            <summary>
            Gets the request token.
            </summary>
            <param name="instance">The instance.</param>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetRequestToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication)">
            <summary>
            Gets the request token.
            </summary>
            <param name="instance">The fluent twitter instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.AuthorizeDesktop(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String)">
            <summary>
            Authorizes the desktop by shelling out to the browser
            </summary>
            <param name="instance">The fluent twitter instance.</param>
            <param name="token">The token.</param>
            <returns>The fluent twitter instance.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.AuthorizeDesktop(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String,System.String)">
            <summary>
            Authorizes the desktop by shelling out to the browser
            </summary>
            <param name="instance">The fluent twitter instance.</param>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="token">The token.</param>
            <returns>The fluent twitter instance.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.AuthorizeDesktop(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String,System.String,System.String)">
            <summary>
            Authorizes the desktop by shelling out to the browser
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="token">The token.</param>
            <param name="callback">The callback url.</param>
            <returns>The FluentTwitter instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetAccessToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String,System.String)">
            <summary>
            Requests the access token.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="token">The request token.</param>
            <returns>The FluentTwitter instance.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetAccessToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String,System.String,System.String)">
            <summary>
            Requests the access token.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="token">The request token.</param>
            <param name="verifier">The PIN.</param>
            <returns>The FluentTwitter instance.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetAccessToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String)">
            <summary>
            Gets the access token.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="token">The request token.</param>
            <returns>The FluentTwitter instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetAccessToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String)">
            <summary>
            Gets the access token.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="token">The request token.</param>
            <param name="verifier">The verifier (PIN).</param>
            <returns>The FluentTwitter instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetClientAuthAccessToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String,System.String,System.String)">
            <summary>
            Requests the access token using client authentication, which does not require
            a browser.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The FluentTwitter instance.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetClientAuthAccessToken(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String,System.String)">
            <summary>
            Requests the access token using client authentication, which does not require
            a browser.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The FluentTwitter instance.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetAuthorizationUrl(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String)">
            <summary>
            Gets the authorization URL used in the OAuth process.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="token">The request token.</param>
            <returns>The authorization url</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetAuthenticationUrl(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String)">
            <summary>
            Gets the authorization URL used in the OAuth process.
            </summary>
            <param name="instance">The FluentTwitter instance.</param>
            <param name="token">The request token.</param>
            <returns>the authorization url</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.SetVerifier(Dimebrain.TweetSharp.Fluent.IFluentTwitterAuthentication,System.String)">
            <summary>
            Sets the OAuth verifier (PIN) provided by the service to the user to enter manually.
            This method is used during desktop authentication, to set the verifier after the fact,
            since it cannot be guessed and is never provided by Twitter.
            </summary>
            <param name="instance">The fluent twitter instance.</param>
            <param name="verifier">The PIN obtained from the user who authorized the application.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.WithBacklog(Dimebrain.TweetSharp.Fluent.ITwitterStreamingFirehose,System.Int32)">
            <summary>
            Requests a backlog of tweets before streaming live.
            Use a value between -150,000 and 150,000.
            If a negative value is passed, the stream will close after the backlog is sent.
            Note: You must have elevated access (greater than "default") to use this parameter.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Streaming-API-Documentation#count"/>
            <param name="instance">The query chain.</param>
            <param name="count">The number of previous statuses to backlog.</param>
            <returns>The query chain.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsSubscriptions)">
            <summary>
            Gets the default cursor used to return the first page of results
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsSubscriptions,System.Int64)">
            <summary>
            Gets the cursor used to return corresponding the page of results
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of results to get.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpPost(Dimebrain.TweetSharp.Fluent.ITwitterStatusDestroy)">
            <summary>
            Specifies that the expression query should be sent as an HTTP POST.
            </summary>
            <param name="instance">The current expression node</param>
            <returns>The current expression node</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpDelete(Dimebrain.TweetSharp.Fluent.ITwitterStatusDestroy)">
            <summary>
            Specifies that the expression query should be sent as an HTTP DELETE.
            </summary>
            <param name="instance">The current expression node</param>
            <returns>The current expression node</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpPost(Dimebrain.TweetSharp.Fluent.ITwitterDirectMessagesDestroy)">
            <summary>
            Uses the HTTP POST verb to perform the action
            </summary>
            <param name="instance">The instance.</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.UsingHttpDelete(Dimebrain.TweetSharp.Fluent.ITwitterDirectMessagesDestroy)">
            <summary>
            Uses the HTTP DELETE verb to perform the action
            </summary>
            <param name="instance">The instance.</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.CreateCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsMemberships)">
            <summary>
            Gets the default cursor used to return the first page of results
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.Extensions.GetCursor(Dimebrain.TweetSharp.Fluent.ITwitterListsMemberships,System.Int64)">
            <summary>
            Gets the cursor used to return corresponding the page of results
            </summary>
            <param name="instance">The instance.</param>
            <param name="cursor">The cursor of the page of results to get.</param>
            <returns></returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.FluentYammer">
            <summary>
            This is the main fluent class for building expressions
            bound for the Yammer API.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentYammer.SetClientInfo(Dimebrain.TweetSharp.YammerClientInfo)">
            <summary>
            Sets the client info.
            </summary>
            <param name="clientInfo">The client info.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentYammer.Request">
            <summary>
            Makes a sequential call to Twitter to get the results of this query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentYammer.RequestAsync">
            <summary>
            Sends the query asynchronously.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentYammer.CreateRequest(Dimebrain.TweetSharp.YammerClientInfo)">
            <summary>
            Creates a new composable query, using a specified client and a default platform.
            </summary>
            <param name="clientInfo">The client making the request</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentYammer.CreateRequest">
            <summary>
            Creates a new composable query, using the default client and platform.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentYammer.ToString">
            <summary>
            Returns the human-readable query to Yammer representing the current expression.
            If you are storing URLs for sending later, you can use <code>AsUrl()</code> to return
            a URL-encoded string instead.
            </summary>
            <returns>A URL-decoded string representing this expression's query to Yammer</returns>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.AuthenticationPair">
            <summary>
            Gets the authentication pair used to authenticate to yammer
            </summary>
            <value>The authentication pair, typically a username and password or a oauth token and tokensecret.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.Authentication">
            <summary>
            Gets or sets the authentication.
            </summary>
            <value>The authentication.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.CacheKey">
            <summary>
            Returns the key prepended to the URL when caching queries.
            If using basic authentication, this will be the authenticated user's username.
            If using OAuth, this will be the authenticated token.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.HasError">
            <summary>
            Gets a value indicating whether the last request resulted in an error.
            </summary>
            <value><c>true</c> if the last request resulted in an error; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.Response">
            <summary>
            Gets or sets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.Callback">
            <summary>
            Gets or sets the callback.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentYammer.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeXmlJson">
            <summary>
            Represents a node that returns its results as XML or JSON
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeXml">
            <summary>
            Interface for nodes that can return results as XML
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNode">
            <summary>
            The interface describing a Twitter leaf node in the fluent expression tree.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterNode">
            <summary>
            The interface describing a Twitter node in the fluent expression tree.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeXml.AsXml">
            <summary>
            Gets the results formatted as XML
            </summary>
            <returns>the xml formatted results</returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeJson">
            <summary>
            Interface for nodes that return results formatted as JSON
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeJson.AsJson">
            <summary>
            Gets the results formatted as JSON
            </summary>
            <returns>the JSON formatted results </returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.TwitterNodeBase">
            <summary>
            The base implementation for fluent query nodes on an <see cref="T:Dimebrain.TweetSharp.Fluent.IFluentTwitter"/> instance.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.TwitterNodeBase.Root">
            <summary>
            The root expression node, useful for lower level debugging.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.TwitterNodeBase.Configuration">
            <summary>
            The current configuration state of this query expression.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.TwitterNodeBase.RateLimitStatus">
            <summary>
            If the last request made was an authenticated call, and Twitter provided rate limit
            information in the response headers, this property is populated with the current rate
            limit as of the last request.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsIsSubscriber.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsIsMember"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Attributes.INamedAttribute">
            <summary>
            Interface for attributes that have a name
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Attributes.INamedAttribute.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.WebPlatform">
            <summary>
            The web social networking platform
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.Web.WebPlatform.Twitter">
            <summary>
            http://twitter.com
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.Web.WebPlatform.Identica">
            <summary>
            http://identi.ca
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.ITwitterModel">
            <summary>
            Inteface for classes that are part of the twitter data model
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.IModel">
            <summary>
            Interface for classes that are part of the data model
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterDateTime.#ctor(System.DateTime,Dimebrain.TweetSharp.Model.TwitterDateFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Model.TwitterDateTime"/> class.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterDateTime.ConvertFromDateTime(System.DateTime,Dimebrain.TweetSharp.Model.TwitterDateFormat)">
            <summary>
            Converts from date time.
            </summary>
            <param name="input">The input.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterDateTime.ConvertToDateTime(System.String)">
            <summary>
            Converts to date time.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterDateTime.ConvertToTwitterDateTime(System.String)">
            <summary>
            Converts to twitter date time.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterDateTime.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.OAuth.OAuthTools">
            <summary>
            A utility class to generate required request parameters for an OAuth query.
            <seealso cref="!:http://www.hueniverse.com/hueniverse/2007/10/beginners-gui-1.html"/>
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.OAuth.OAuthTools._encoding">
            <summary>
            All text parameters are UTF-8 encoded (per section 5.1).
            </summary>
            <seealso cref="!:http://www.hueniverse.com/hueniverse/2008/10/beginners-gui-1.html"/> 
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.GetNonce">
            <summary>
            Generates a random 16-byte lowercase alphanumeric string. 
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#nonce"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.GetTimestamp">
            <summary>
            Generates a timestamp based on the current elapsed seconds since '01/01/1970 0000 GMT"
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#nonce"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.GetTimestamp(System.DateTime)">
            <summary>
            Generates a timestamp based on the elapsed seconds of a given time since '01/01/1970 0000 GMT"
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#nonce"/>
            <param name="dateTime">A specified point in time.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.UrlEncode(System.String)">
            <summary>
            URL encodes a string based on section 5.1 of the OAuth spec.
            Namely, percent encoding with [RFC3986], avoiding unreserved characters,
            upper-casing hexadecimal characters, and UTF-8 encoding for text value pairs.
            </summary>
            <param name="value"></param>
            <seealso cref="!:http://oauth.net/core/1.0#encoding_parameters"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.UrlEncodeParameterString(System.String)">
            <summary>
            URL encodes a string based on section 5.1 of the OAuth spec.
            Namely, percent encoding with [RFC3986], avoiding unreserved characters,
            upper-casing hexadecimal characters, and UTF-8 encoding for text value pairs.
            </summary>
            <param name="value"></param>
            <seealso cref="!:http://oauth.net/core/1.0#encoding_parameters"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.NormalizeRequestParameters(Dimebrain.TweetSharp.Core.Web.WebParameterCollection)">
            <summary>
            Sorts a collection of key-value pairs by name, and then value if equal,
            concatenating them into a single string. This string should be encoded
            prior to, or after normalization is run.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#rfc.section.9.1.1"/>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.SortParametersExcludingSignature(Dimebrain.TweetSharp.Core.Web.WebParameterCollection)">
            <summary>
            Sorts a <see cref="T:Dimebrain.TweetSharp.Core.Web.WebParameterCollection"/> by name, and then value if equal.
            </summary>
            <param name="parameters">A collection of parameters to sort</param>
            <returns>A sorted parameter collection</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.ConstructRequestUrl(System.Uri)">
            <summary>
            Creates a request URL suitable for making OAuth requests.
            Resulting URLs must exclude port 80 or port 443 when accompanied by HTTP and HTTPS, respectively.
            Resulting URLs must be lower case.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#rfc.section.9.1.2"/>
            <param name="url">The original request URL</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.ConcatenateRequestElements(Dimebrain.TweetSharp.Core.Web.WebMethod,System.String,Dimebrain.TweetSharp.Core.Web.WebParameterCollection)">
            <summary>
            Creates a request elements concatentation value to send with a request. 
            This is also known as the signature base.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#rfc.section.9.1.3"/>
            <seealso cref="!:http://oauth.net/core/1.0#sig_base_example"/>
            <param name="method">The request's HTTP method type</param>
            <param name="url">The request URL</param>
            <param name="parameters">The request's parameters</param>
            <returns>A signature base string</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.GetSignature(Dimebrain.TweetSharp.Core.OAuth.OAuthSignatureMethod,System.String,System.String)">
            <summary>
            Creates a signature value given a signature base and the consumer secret.
            This method is used when the token secret is currently unknown.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#rfc.section.9.2"/>
            <param name="signatureMethod">The hashing method</param>
            <param name="signatureBase">The signature base</param>
            <param name="consumerSecret">The consumer key</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.OAuth.OAuthTools.GetSignature(Dimebrain.TweetSharp.Core.OAuth.OAuthSignatureMethod,System.String,System.String,System.String)">
            <summary>
            Creates a signature value given a signature base and the consumer secret and a known token secret.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#rfc.section.9.2"/>
            <param name="signatureMethod">The hashing method</param>
            <param name="signatureBase">The signature base</param>
            <param name="consumerSecret">The consumer secret</param>
            <param name="tokenSecret">The token secret</param>
            <returns></returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Exceptions.TweetSharpException">
            <summary>
            An exception raised when TweetSharp encounters an error.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Exceptions.TweetSharpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Exceptions.TweetSharpException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Exceptions.TweetSharpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Exceptions.TweetSharpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerUserReference">
            <summary>
            Represents a yammer user (summary details)
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerObjectBase.Id">
            <summary>
            the id of the object
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerObjectBase.Url">
            <summary>
            The API resource for fetching this object.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerObjectBase.WebUrl">
            <summary>
            The URL for viewing this object on the main Yammer website.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerObjectBase.CreatedAt">
            <summary>
            The time and date this message was created.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserReference.Name">
            <summary>
            the screen name of the user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserReference.FullName">
            <summary>
            the full name of the user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserReference.MugshotUrl">
            <summary>
            url to the user's photo
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserReference.JobTitle">
            <summary>
            The user's job title
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserReference.UserStats">
            <summary>
            Counters for the user (updates, following, followers...)
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerResult">
            <summary>
            Represents a result returning from the Twitter API.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.Query.WebQueryResult">
            <summary>
            Represents the result from a query execution.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.Query.WebQueryResult.RequestDate">
            <summary>
            Gets or sets the request date.
            </summary>
            <value>The request date.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.Query.WebQueryResult.ResponseDate">
            <summary>
            Gets or sets the response date.
            </summary>
            <value>The response date.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.Query.WebQueryResult.Response">
            <summary>
            Gets or sets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.Query.WebQueryResult.RequestUri">
            <summary>
            Gets or sets the request URI.
            </summary>
            <value>The request URI.</value>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.YammerResult.#ctor(Dimebrain.TweetSharp.Core.Web.Query.WebQueryResult,System.Net.WebException)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Model.TwitterResult"/> class.
            </summary>
            <param name="result">The result.</param>
            <param name="exception">The WebException that was caught during the query</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.YammerResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Model.YammerResult"/> class.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.IsYammerError">
            <summary>
            Gets a value indicating whether this result returned a Twitter error.
            </summary>
            <value><c>true</c> if this result is in error; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.IsFromCache">
            <summary>
            Gets a value indicating whether this result was served from a cache.
            </summary>
            <value>
            	<c>true</c> if this result is from a cache; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.Retries">
            <summary>
            Gets or sets a value indicating how many retries occured to get the current result
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.PreviousResult">
            <summary>
            Gets or sets the previous (failed) twitter result when an error condition caused a retry
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.ResponseLength">
            <summary>
            Gets or sets the length of the response.
            This length corresponds to the actual message size in bytes returned from Twitter. 
            </summary>
            <value>The length of the response.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.ResponseUri">
            <summary>
            Gets or sets the response URI.
            </summary>
            <value>The response URI.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.RequestHttpMethod">
            <summary>
            Gets or sets the request HTTP method.
            </summary>
            <value>The request HTTP method.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.ResponseType">
            <summary>
            Gets or sets the MIME type of the response.
            </summary>
            <value>The type of the response.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.ResponseHttpStatusCode">
            <summary>
            Gets or sets the response HTTP status code.
            </summary>
            <value>The response HTTP status code.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResult.ResponseHttpStatusDescription">
            <summary>
            Gets or sets the response HTTP status description.
            </summary>
            <value>The response HTTP status description.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeXmlJsonAtom">
            <summary>
            Represents a node that returns its results as XML, JSON, or Atom.
            These appeared in September 2009 API announcements.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterLists.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterLists"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsSubscribers.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsSubscribers"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.YammerExtensions.AsToken(Dimebrain.TweetSharp.Model.YammerResult)">
            <summary>
            This method attempts to cast a string response into an <see cref="T:Dimebrain.TweetSharp.Model.OAuthToken"/>.
            If unsuccessful, null is returned.
            </summary>
            <param name="result">The XML or JSON result to convert</param>
            <returns>A token instance, or null if the result cannot cast to a token pair.</returns>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.IRateLimitingRule.LimitToPercentOfTotal">
            <summary>
            Desired percentage of the total rate limit to allocate to this task this rule applies to
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.IRateLimitingRule.RateLimitingType">
            <summary>
            Indicates the type of rate limiting used by this rule
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.IRateLimitingRule.GetRateLimitStatus">
            <summary>
            Method that provides the current rate limit status used to determine whether or not to run the method
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.IRateLimitingRule.RateLimitPredicate">
            <summary>
            User-provided method that evaluates the current rate limit status and returns bool indicating whether or not to run the task
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerMessageReference">
            <summary>
            Summary reference to a Yammer message
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageReference.DirectToId">
            <summary>
            When a message is a private 1-to-1 (or "direct") message, this will indicate the intended recipient.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageReference.RepliedToId">
            <summary>
            The ID of the message this message is in reply to, if applicable.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageReference.Body">
            <summary>
            the body of the message
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageReference.SenderId">
            <summary>
            The ID of the message's sender
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageReference.MessageType">
            <summary>
            One of the supported message types
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageReference.SenderType">
            <summary>
            the type of the sender (user,bot,guide...)
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessage.ThreadId">
            <summary>
            The id of the tread in which this message appears
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessage.GroupId">
            <summary>
            the (optional) id of the group the message was posted to (if posted to a group)
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeAll">
            <summary>
            Inteface for nodes that can return all supported formats
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeSyndicates">
            <summary>
            Interface for nodes that can return either RSS or Atom
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeRss">
            <summary>
            Interface for nodes that return results as RSS
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterLeafNodeRss.AsRss">
            <summary>
            Gets the results formatted as RSS
            </summary>
            <returns>the RSS formatted results</returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphIds">
            <summary>
            interface for nodes that deal with social graph ids
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters">
            <summary>
            Paramters used in Twitter queries
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Activity">
            <summary>
            Gets or sets the activity.
            </summary>
            <value>The activity.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.SinceDate">
            <summary>
            Gets or sets the since date.
            </summary>
            <value>The since date.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.SinceId">
            <summary>
            Gets or sets the since id.
            </summary>
            <value>The since id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.MaxId">
            <summary>
            Gets or sets the max id.
            </summary>
            <value>The max id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Count">
            <summary>
            Gets or sets the count of objects to return.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Page">
            <summary>
            Gets or sets the page of objects to request.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ReturnPerPage">
            <summary>
            Gets or sets the number if items per page to return
            </summary>
            <value>The return per page.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Id">
            <summary>
            Gets or sets the requested id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ScreenName">
            <summary>
            Gets or sets the requested screenname
            </summary>
            <value>The screenname</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.InReplyToStatusId">
            <summary>
            Gets or sets the "in reply to status id" parameter
            </summary>
            <value>The in reply to status id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Email">
            <summary>
            Gets or sets the email address parameter.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.UserScreenName">
            <summary>
            Gets or sets the user screen name parameter
            </summary>
            <value>The user screen name parameter.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.UserId">
            <summary>
            Gets or sets the user id parameter.
            </summary>
            <value>The user id parameter.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Follow">
            <summary>
            Gets or sets the follow parameter.
            </summary>
            <value>The follow parameter.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.VerifyId">
            <summary>
            Gets or sets the verify id parameter.
            </summary>
            <value>The verify id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.VerifyScreenName">
            <summary>
            Gets or sets the verify screen name parameter.
            </summary>
            <value>The verify screen name parameter.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.PostImagePath">
            <summary>
            Gets or sets the post image path.
            </summary>
            <value>The post image path.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.PostImageProvider">
            <summary>
            Gets or sets the post image provider.
            </summary>
            <value>The post image provider.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.DirectPath">
            <summary>
            Gets or sets a direct URL path to use in place of a fluent query.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.GeoLocation">
            <summary>
            Gets or sets the geospatial location of the query, if applicable.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.Cursor">
            <summary>
            Gets or sets the Cursor ID for the query
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.TargetId">
            <summary>
            Gets or sets the target id (for friendships/show).
            </summary>
            <value>The target id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.SourceId">
            <summary>
            Gets or sets the source id (for friendships/show).
            </summary>
            <value>The source id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.SourceScreenName">
            <summary>
            Gets or sets the name of the source screen (for friendships/show).
            </summary>
            <value>The name of the source screen.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.TargetScreenName">
            <summary>
            Gets or sets the name of the target screen (for friendships/show).
            </summary>
            <value>The name of the target screen.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ListSlug">
            <summary>
            Gets or sets the list slug.
            </summary>
            <value>The list slug.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ListId">
            <summary>
            Gets or sets the list id.
            </summary>
            <value>The list id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ListMode">
            <summary>
            Gets or sets the list mode.
            </summary>
            <value>The list mode.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ListName">
            <summary>
            Gets or sets the name of the list (for creating lists).
            </summary>
            <value>The name of the list.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ListMemberId">
            <summary>
            Gets or sets the list member id.
            </summary>
            <value>The list member id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.ListDescription">
            <summary>
            Gets or sets the list description.
            </summary>
            <value>The list description.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterParameters.UserSearch">
            <summary>
            Gets or sets the user search query.
            </summary>
            <value>The user search query.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerClientType">
            <summary>
            The type of yammer client
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.YammerClientType.Web">
            <summary>
            a web client
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.HttpPostParameterType">
            <summary>
            The list of possible HTTP POST parameters sent with requests.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.Web.HttpPostParameterType.Field">
            <summary>
            A POST field.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.Web.HttpPostParameterType.File">
            <summary>
            A POST file, sent as multi-part.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Caching.IClientCache">
            <summary>
            A simple caching interface that supports absolute and sliding expiration.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Caching.IClientCache.Insert(System.String,System.Object)">
            <summary>
            Caches a new value under the specified key. 
            </summary>
            <param name="key">The key</param>
            <param name="value">The value</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Caching.IClientCache.Insert(System.String,System.Object,System.DateTime)">
            <summary>
            Caches a new value under the specified key, with an absolute expiration.
            </summary>
            <param name="key">The key</param>
            <param name="value">The value</param>
            <param name="absoluteExpiration">The absolute expiration of the cached value</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Caching.IClientCache.Insert(System.String,System.Object,System.TimeSpan)">
            <summary>
            Caches a new value under the specified key, with an absolute expiration.
            </summary>
            <param name="key">The key</param>
            <param name="value">The value</param>
            <param name="slidingExpiration">The sliding inactivity expiration of the cached value</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Caching.IClientCache.Get``1(System.String)">
            <summary>
            Retrieves a value from the cache, strongly typed to the value's type.
            </summary>
            <typeparam name="T">The expected type of the cached value</typeparam>
            <param name="key">The key</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Caching.IClientCache.Remove(System.String)">
            <summary>
            Removes a value from the cache by its key.
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Caching.IClientCache.Count">
            <summary>
             The number of stored key value pairs currently in the cache.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Caching.IClientCache.Keys">
            <summary>
            All of the keys currently in the cache.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserStats.Updates">
            <summary>
            the number of status updates posted by this user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserStats.Followers">
            <summary>
            the number of followers this user has
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUserStats.Following">
            <summary>
            the number of other users this user is following
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.YammerWebCallback">
            <summary>
            Represents a callback from an API call.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsMemberships.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsMemberships"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.WebParameterCollection">
            <summary>
            A collection of parameters for use with web queries.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebParameterCollection.#ctor(System.Collections.Generic.IEnumerable{Dimebrain.TweetSharp.Core.Web.WebParameter})">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Web.WebParameterCollection"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebParameterCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Web.WebParameterCollection"/> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Web.WebParameterCollection"/> class.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.WebParameterCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Dimebrain.TweetSharp.Core.Web.WebParameter"/> with the specified name.
            If more than one parameter exists with the same name, null is returned.
            </summary>
            <value></value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.WebParameterCollection.Names">
            <summary>
            Gets the web parameter names.
            </summary>
            <value>The names.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.WebParameterCollection.Values">
            <summary>
            Gets the web parameter values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Caching.IWebCache">
            <summary>
            A cache that uses cache dependency and priority features.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider">
            <summary>
            A list of supported URL shortening services.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider.Tomato">
            <summary>
            http://to.m8.to
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider.Trim">
            <summary>
            http://tr.im
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider.Bitly">
            <summary>
            http://bit.ly
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider.IsGd">
            <summary>
            http://is.gd
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.ShortenUrlServiceProvider.TinyUrl">
            <summary>
            http://tinyurl.com
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile">
            <summary>
            Interface representing a user profile
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileUrl">
            <summary>
            Gets or sets the profile URL.
            </summary>
            <value>The profile URL.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileLocation">
            <summary>
            Gets or sets the user location.
            </summary>
            <value>The user location.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileDescription">
            <summary>
            Gets or sets the user description.
            </summary>
            <value>The user description.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileDeliveryDevice">
            <summary>
            Gets or sets the profile delivery device.
            </summary>
            <value>The profile delivery device.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileBackgroundColor">
            <summary>
            Gets or sets the color of the profile background.
            </summary>
            <value>The color of the profile background.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileTextColor">
            <summary>
            Gets or sets the color of the profile text.
            </summary>
            <value>The color of the profile text.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileLinkColor">
            <summary>
            Gets or sets the color of the profile link.
            </summary>
            <value>The color of the profile link.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileSidebarFillColor">
            <summary>
            Gets or sets the color of the profile sidebar fill.
            </summary>
            <value>The color of the profile sidebar fill.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileSidebarBorderColor">
            <summary>
            Gets or sets the color of the profile sidebar border.
            </summary>
            <value>The color of the profile sidebar border.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileImagePath">
            <summary>
            Gets or sets the profile image path.
            </summary>
            <value>The profile image path.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.IFluentTwitterProfile.ProfileBackgroundImagePath">
            <summary>
            Gets or sets the profile background image path.
            </summary>
            <value>The profile background image path.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterAccountRateLimitStatus">
            <summary>
            Interface for nodes that query the rate limit status
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsUsers(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterUser"/> collection.
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>An user collection instance, or null if the input cannot cast to a user collection</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsUser(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterUser"/>
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>A user instance, or null if the input cannot cast to a user</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsList(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterList"/>
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>A user instance, or null if the input cannot cast to a list</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsLists(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterList"/> collection
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>A status collection instance, or null if the input cannot cast to a list collection</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsStatuses(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterStatus"/> collection
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>A status collection instance, or null if the input cannot cast to a status collection</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsSavedSearches(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterSavedSearch"/> collection
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>A saved search collection instance, or null if the input cannot cast to a saved search collection</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsError(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterError"/>
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>An error instance, or null if the input cannot cast to an error</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsSearchResult(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.TwitterSearchResult"/>
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>A search result instance, or null if the input cannot cast to a search result</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsSearchTrends(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast JSON string into a <see cref="T:Dimebrain.TweetSharp.Model.Twitter.TwitterSearchTrends"/>
            instance. If this method is not successful, null is returned.
            </summary>
            <param name="result">The JSON input to convert</param>
            <returns>A search result instance, or null if the input cannot cast to a search result</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsIds(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into a <see cref="!:List"/>
            instance. If this method is not successful, an empty list is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>An Id list instance, or an emppty list if the input cannot cast to a list of Ids</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.As``1(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast an XML or JSON string into an arbitrary class instance. 
            If this method is not successful, null is returned.
            </summary>
            <param name="result">The XML or JSON input to convert</param>
            <returns>An T instance, or null if the input cannot cast to T</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsToken(Dimebrain.TweetSharp.Model.TwitterResult)">
            <summary>
            This method attempts to cast a string response into an <see cref="T:Dimebrain.TweetSharp.Model.OAuthToken"/>.
            If unsuccessful, null is returned.
            </summary>
            <param name="result">The XML or JSON result to convert</param>
            <returns>A token instance, or null if the result cannot cast to a token pair.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsNextCursor(Dimebrain.TweetSharp.Model.TwitterResult)">
            This method attempts to cast an XML or JSON string into an <see cref="T:System.Int64"/> to be used with the paging of friend/follower ids. 
            If this method is not successful, 0 is returned.
            <param name="result">The XML or JSON input to convert</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.TwitterExtensions.AsPreviousCursor(Dimebrain.TweetSharp.Model.TwitterResult)">
            This method attempts to cast an XML or JSON string into an <see cref="T:System.Int64"/> to be used with the paging of friend/follower ids. 
            If this method is not successful, 0 is returned.
            <param name="result">The XML or JSON input to convert</param>
            <returns></returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterGeoLocationConverter">
            <summary>
            This converter exists to convert geo-spatial coordinates.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterConverterBase">
            <summary>
            Acts as a base for custom JSON conversion.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterConverterBase.IsNullable(System.Type)">
            <summary>
            Determines whether the specified type is nullable.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if the specified t is nullable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterConverterBase.IsNullableType(System.Type)">
            <summary>
            Determines whether [is nullable type] [the specified t].
            </summary>
            <param name="type">The t.</param>
            <returns>
            	<c>true</c> if [is nullable type] [the specified t]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterGeoLocationConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterGeoLocationConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <param name="serializer">The serializer.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterGeoLocationConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterSocialGraph">
            <summary>
            Inteface for nodes that query the social graph
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerAttachmentContent">
            <summary>
            Represents the content of a yammer attachment
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerAttachmentContent.Size">
            <summary>
            Gets or sets the size of the attachment content
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerAttachmentContent.Url">
            <summary>
            Gets or sets the URL of the attachment content.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Service.TwitterService">
            <summary>
            This service provides a simple API layer for TweetSharp that hides
            serialization details and uses the most efficient API configuration.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchForTweets(System.String)">
            <summary>
            
            </summary>
            <param name="phrase"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-search"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchCurrentTrends">
            <summary>
            Returns the current top 10 trending topics on Twitter.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchDailyTrends">
            <summary>
            Returns the top 20 trending topics for each hour in a given day.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-daily"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchWeeklyTrends">
            <summary>
            Returns the top 30 trending topics for each day in a given week.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-trends-weekly"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.#ctor(Dimebrain.TweetSharp.TwitterClientInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Service.TwitterService"/> class.
            </summary>
            <param name="info">The client info.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Service.TwitterService"/> class.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.CacheWith(Dimebrain.TweetSharp.Core.Caching.IClientCache)">
            <summary>
            Delegates caching to the provided <see cref="T:Dimebrain.TweetSharp.Core.Caching.IClientCache"/> instance.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.CacheFor(System.TimeSpan)">
            <summary>
            Caches all following API calls using the current caching scheme
            for a specified length of time. 
            Cache keys are scoped to the authenticating user and the API URI.
            </summary>
            <param name="length">The length of time to cache individual queries for until they are invalid.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.CacheForInactivityOf(System.TimeSpan)">
            <summary>
            Caches all following API calls using the current caching scheme
            for a specified length of inactive time. Inactive time corresponds
            to the amount of time passed without attempts to access or update
            the cache key.
            Cache keys are scoped to the authenticating user and the API URI.
            </summary>
            <param name="length">The length of inactivity required to invalid individual cached queries.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.RetryOn(Dimebrain.TweetSharp.Fluent.RetryOn,System.Int32)">
            <summary>
            Sets the retry policy for API requests based on 
            <see cref="M:Dimebrain.TweetSharp.Service.TwitterService.RetryOn(Dimebrain.TweetSharp.Fluent.RetryOn,System.Int32)"/> condition flags and a maximum number
            of retry attempts.
            </summary>
            <param name="conditions">The conditions.</param>
            <param name="maxRetries">The max retries.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.TimeoutAfter(System.TimeSpan)">
            <summary>
            Sets a duration before timing out an API request
            or Stream API read operation.
            </summary>
            <param name="duration">The duration before timing out.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.AuthenticateAs(System.String,System.String)">
            <summary>
            Authenticates the service using a username and password.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.AuthenticateWith(System.String,System.String)">
            <summary>
            Authenticates the service using an OAuth token and secret.
            </summary>
            <param name="token">The token.</param>
            <param name="tokenSecret">The token secret.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsOnPublicTimeline">
            <summary>
            Returns the latest 20 tweets from Twitter's public timeline.
            This method is cached by Twitter for 60 seconds.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-public_timeline"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsOnHomeTimeline">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-home_timeline"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsOnFriendsTimeline">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-friends_timeline"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsOnUserTimeline">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-user_timeline"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsMentioningMe">
            <summary>
            Lists the first 20 tweets mentioning the authenticated user.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsMentioningMe(System.Int32)">
            <summary>
            Lists the first page of tweets mentioning the authenticated user.
            Each page has 20 tweets.
            </summary>
            <param name="count">The number of tweets to return, up to 200.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsMentioningMe(System.Int32,System.Int32)">
            <summary>
            Lists the specified page of tweets mentioning the authenticated user.
            Each page has the specified number of tweets, up to 200.
            </summary>
            <param name="page">The page of tweets to return, relative to the tweet count.</param>
            <param name="count">The number of tweets to return, up to 200.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-mentions"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListRetweetsByMe">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_by_me"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListRetweetsToMe">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweeted_to_me"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListRetweetsOfMyTweets">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweets_of_me"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetTweet(System.Int64)">
            <summary>
            Gets the tweet with the specified ID.
            </summary>
            <param name="id">The tweet ID.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses%C2%A0show"></seealso>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetTweet(System.Int32)">
            <summary>
            Gets the tweet with the specified ID.
            </summary>
            <param name="id">The tweet ID.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses%C2%A0show"></seealso>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendTweet(System.String)">
            <summary>
            Tweets the specified text from the authenticated user.
            A tweet with text identical to the authenticating user's 
            current status will be ignored.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendTweet(System.String,System.Double,System.Double)">
            <summary>
            Tweets the specified text from the authenticated user.
            Includes provided geo-tagging data.
            A tweet with text identical to the authenticating user's 
            current status will be ignored.
            </summary>
            <param name="text">The text.</param>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendTweet(System.String,Dimebrain.TweetSharp.Model.GeoLocation)">
            <summary>
            Tweets the specified text from the authenticated user.
            Includes the provided <see cref="T:Dimebrain.TweetSharp.Model.GeoLocation"/> data.
            A tweet with text identical to the authenticating user's 
            current status will be ignored.
            </summary>
            <param name="text">The text.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendTweet(System.String,System.Int64)">
            <summary>
            Tweets the specified text from the authenticated user.
            You must mention a user using @username in your message
            if you intend your tweet to include a reference to <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.InReplyToStatusId"/>.
            A tweet with text identical to the authenticating user's 
            current status will be ignored.
            </summary>
            <param name="text"></param>
            <param name="inReplyToStatusId"></param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendTweet(System.String,System.Int64,Dimebrain.TweetSharp.Model.GeoLocation)">
            <summary>
            Tweets the specified text from the authenticated user.
            Includes the provided <see cref="T:Dimebrain.TweetSharp.Model.GeoLocation"/> data.
            You must mention a user using @username in your message
            if you intend your tweet to include a reference to <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.InReplyToStatusId"/>.
            A tweet with text identical to the authenticating user's
            current status will be ignored.
            </summary>
            <param name="text">The text.</param>
            <param name="inReplyToStatusId">The ID of the tweet this tweet is replying to.</param>
            <param name="location">The location.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.DeleteTweet(Dimebrain.TweetSharp.Model.TwitterStatus)">
            <summary>
            Deletes a tweet. The tweet must be authored by the authenticated user.
            </summary>
            <param name="status">The tweet to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.DeleteTweet(System.Int64)">
            <summary>
            Deletes a tweet. The tweet must be authored by the authenticated user.
            </summary>
            <param name="id">The tweet ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.DeleteTweet(System.Int32)">
            <summary>
            Deletes a tweet. The tweet must be authored by the authenticated user.
            </summary>
            <param name="id">The tweet ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendRetweet(System.Int64)">
            <summary>
            
            </summary>
            <param name="statusId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses-retweet"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFriends">
            <summary>
            Gets up to the first 100 friends for the authenticating user.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses%C2%A0friends"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFriends(System.Int64)">
            <summary>
            Lists the friends of the authenticated user by cursor value.
            This is useful for paging through large numbers of friends.
            </summary>
            <param name="cursor">The cursor.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses%C2%A0friends"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFollowers">
            <summary>
            Gets up to the first 100 friends for the authenticating user.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses%C2%A0followers"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFollowers(System.Int64)">
            <summary>
            Lists the friends of the authenticated user by cursor value.
            This is useful for paging through large numbers of friends.
            </summary>
            <param name="cursor">The cursor value for paging.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-statuses%C2%A0followers"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetUserProfile">
            <summary>
            Gets the authenticated user's profile.
            This is achieved with a call to verify credentials.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0verify_credentials"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetUserProfileFor(System.String)">
            <summary>
            Gets the specified user screen name's profile.
            </summary>
            <param name="screenName">The user's screen name.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-users%C2%A0show"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetUserProfileFor(System.Int64)">
            <summary>
            Gets the specified user ID's profile.
            </summary>
            <param name="id">The user ID.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-users%C2%A0show"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchForUser(System.String)">
            <summary>
            Searches for a Twitter user given a query.
            This search is the same as Twitter's web-based People Search.
            This search yields a maximum of 1000 results in total.
            </summary>
            <param name="query">The search query.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-users-search"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchForUser(System.String,System.Int32)">
            <summary>
            Searches for a Twitter user given a query.
            This search is the same as Twitter's web-based People Search.
            This search yields a maximum of 1000 results in total.
            </summary>
            <param name="query">The search query.</param>
            <param name="page">The page of user results to get for this query.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchForUser(System.String,System.Int32,System.Int32)">
            <summary>
            Searches for a Twitter user given a query.
            This search is the same as Twitter's web-based People Search.
            This search yields a maximum of 1000 results in total.
            </summary>
            <param name="query">The search query.</param>
            <param name="page">The page of user results to get for this query.</param>
            <param name="count">The number of results to return on this page.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetUserProfileFor(System.Int32)">
            <summary>
            Gets the specified user ID's profile.
            </summary>
            <param name="id">The user ID.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-users%C2%A0show"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.CreatePublicList(System.String,System.String)">
            <summary>
            Creates a new list for the authenticated user. Accounts are limited to 20 lists. 
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-POST-lists"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UpdateList(Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            
            </summary>
            <param name="list"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-POST-lists-id"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListListsFor(System.String)">
            <summary>
            List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user whose lists are being returned.
            </summary>
            <param name="listOwnerScreenName"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-lists"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetList(System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-id"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.DeleteList(System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-DELETE-list-id"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListTweetsOnListTimeline(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-statuses"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListListMembershipsFor(System.String)">
            <summary>
            List the lists the specified user has been added to.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-memberships"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListListSubscriptionsFor(System.String)">
            <summary>
            List the lists the specified user follows.
            </summary>
            <param name="listSubscriberScreenName"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscriptions"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListListMembers(System.String,System.Int32)">
            <summary>
            Returns the members of the specified list.
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-members"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.AddMemberToList(System.String,System.Int64,System.Int32)">
            <summary>
            Add a member to a list. The authenticated user must own the list to add members to it. 
            Lists are limited to 500 members.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-POST-list-members"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.RemoveMemberFromList(System.String,System.Int64,System.Int32)">
            <summary>
            Removes the specified member from the list. 
            The authenticated user must be the list's owner to remove members from the list.
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <param name="userId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-DELETE-list-members"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.VerifyListMember(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <param name="userId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscribers-id"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListListFollowers(System.String,System.Int32)">
            <summary>
            Returns the subscribers of the specified list.
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscribers"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.FollowList(System.String,System.Int64)">
            <summary>
            Subscribes the authenticated user to the specified list.
            </summary>
            <param name="listOwnerScreenName">The screen name of the list owner.</param>
            <param name="listId">The list ID.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-POST-list-subscribers"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UnfollowList(System.String,System.Int64)">
            <summary>
            Unsubscribes the authenticated user from the specified list.
            </summary>
            <param name="listOwnerScreenName">The screen name of the list owner.</param>
            <param name="listId">The list ID.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-DELETE-list-subscribers"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.VerifyListFollower(System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="listOwnerScreenName"></param>
            <param name="listId"></param>
            <param name="userId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-GET-list-subscribers-id"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListDirectMessagesReceived">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-direct_messages"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.DeleteDirectMessage(System.Int64)">
            <summary>
            Deletes the direct message. The direct message must be authored by the authenticated user.
            </summary>
            <param name="messageId">The message ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.DeleteDirectMessage(System.Int32)">
            <summary>
            Deletes the direct message. The direct message must be authored by the authenticated user.
            </summary>
            <param name="messageId">The message ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendDirectMessage(System.Int32,System.String)">
            <summary>
            Sends a direct message from the authenticated user.
            </summary>
            <param name="recipientUserId">The recipient user ID.</param>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SendDirectMessage(System.String,System.String)">
            <summary>
            Sends a direct message from the authenticated user.
            </summary>
            <param name="recipientScreenName">Name of the recipient screen.</param>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.FollowUser(System.Int32)">
            <summary>
            Follows the specified user by ID.
            </summary>
            <param name="userId">The user's ID.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friendships%C2%A0create"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UnfollowUser(System.String)">
            <summary>
            
            </summary>
            <param name="screenName"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friendships%C2%A0destroy"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.VerifyFriendship(System.Int32)">
            <summary>
            Returns an indication whether the authenticating user follows the specified user.
            </summary>
            <param name="followedUserId">The user ID.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friendships-exists"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.VerifyFriendship(System.Int32,System.Int32)">
            <summary>
            Returns an indication whether the first specified user follows the other specified user.
            </summary>
            <param name="followingUserId">The following user ID.</param>
            <param name="followedUserId">The followed user ID.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friendships-exists"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetFriendshipInfo(System.String,System.String)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friendships-show"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetFriendshipInfo(System.Int32,System.Int32)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friendships-show"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFriendIds">
            <summary>
            Lists the authenticating user's friends' IDs.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friends%C2%A0ids"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFriendIdsFor(System.Int32)">
            <summary>
            Lists the specified user's friends' IDs.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-friends%C2%A0ids"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFollowerIds">
            <summary>
            Lists the authenticating user's followers' IDs.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-followers%C2%A0ids"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFollowerIdsFor(System.Int32)">
            <summary>
            Lists the specified user's followers' IDs.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-followers%C2%A0ids"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.VerifyCredentials">
            <summary>
            Verifies the credentials provided with the service call to ensure a user 
            will authenticate against the API.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0verify_credentials"></seealso>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetRateLimitStatus">
            <summary>
            Gets the <see cref="T:Dimebrain.TweetSharp.Model.TwitterRateLimitStatus"/> for the authenticated user.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0rate_limit_status"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.EndSession">
            <summary>
            Ends the session of the authenticating user, returning a null cookie.  
            Use this method to sign users out of client-facing applications like widgets.
            If this method returns a null <see cref="T:Dimebrain.TweetSharp.Model.TwitterError"/> instance, 
            the session was located and ended successfully.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0end_session"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UpdateDeliveryDevice(Dimebrain.TweetSharp.Model.TwitterDeliveryDevice)">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0update_delivery_device"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UpdateProfileColors(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0update_profile_colors"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UpdateProfileImage(System.String)">
            <summary>
            Updates the authenticating user's profile image. 
            This method expects raw multipart data, not a URL to an image.
            Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size.  
            Images with width larger than 500 pixels will be scaled down.
            </summary>
            <param name="path"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0update_profile_image"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UpdateProfileBackgroundImage(System.String)">
            <summary>
            Updates the authenticating user's profile background image.  
            This method expects raw multipart data, not a URL to an image.
            Must be a valid GIF, JPG, or PNG image of less than 800 kilobytes in size.  
            Images with width larger than 2048 pixels will be scaled down.
            </summary>
            <param name="path"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0update_profile_background_image"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UpdateProfile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <param name="email"></param>
            <param name="url"></param>
            <param name="location"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-account%C2%A0update_profile"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListFavoriteTweets">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.FavoriteTweet(System.Int64)">
            <summary>
            
            </summary>
            <param name="statusId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites%C2%A0create"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UnfavoriteTweet(System.Int64)">
            <summary>
            
            </summary>
            <param name="statusId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-favorites%C2%A0destroy"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.FollowUserNotifications(Dimebrain.TweetSharp.Model.TwitterUser)">
            <summary>
            Follows the specified user.
            </summary>
            <param name="user">The user.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-notifications%C2%A0follow"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.FollowUserNotifications(System.String)">
            <summary>
            Follows the specified user by screen name.
            </summary>
            <param name="screenName">The user's screen name.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-notifications%C2%A0follow"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UnfollowUserNotifications(System.Int32)">
            <summary>
            Disables notifications for updates from the specified user to the authenticating user.  
            Returns the specified user when successful.
            </summary>
            <param name="userId">The user ID to stop following notifications for.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-notifications%C2%A0leave"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.UnblockUser(System.Int32)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-blocks%C2%A0destroy"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.VerifyBlocking(System.Int32)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter+REST+API+Method%3A-blocks-exists"/> 
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListBlockedUsers">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter+REST+API+Method%3A-blocks-blocking"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListBlockedUserIds">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-blocks-blocking-ids"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ReportSpamFrom(System.String)">
            <summary>
            Reports the screen name as a spammer.
            </summary>
            <param name="userScreenName">The spammer's screen name.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-report_spam"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ReportSpamFrom(System.Int32)">
            <summary>
            Reports the user ID as a spammer.
            </summary>
            <param name="userId">The user id.</param>
            <returns></returns>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-report_spam"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.ListSavedSearches">
            <summary>
            Lists the saved searches for the authenticating user.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetSavedSearch(System.Int32)">
            <summary>
            Gets the saved search.
            </summary> 
            <param name="searchId">The search id.</param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches-show"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.CreateSavedSearch(System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches-create"/> 
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.DeleteSavedSearch(System.Int32)">
            <summary>
            
            </summary>
            <param name="searchId"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-saved_searches-destroy"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetRequestToken">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-oauth-request_token"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.AuthorizeDesktop(Dimebrain.TweetSharp.Model.OAuthToken)">
            <summary>
            
            </summary>
            <param name="requestToken"></param>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-oauth-authorize"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.GetAccessToken(Dimebrain.TweetSharp.Model.OAuthToken)">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-oauth-access_token"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.SearchLocalTrends(System.Int64)">
            <summary>
            
            </summary>
            <param name="woeId"></param>
            <seealso cref="!:http://twitterapi.pbworks.com/Twitter-REST-API-Method%3A-trends-location"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.IsTwitterDown">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-help%C2%A0test"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Service.TwitterService.IsTwitterUp">
            <summary>
            
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-REST-API-Method%3A-help%C2%A0test"/>
            <returns></returns>
        </member>
        <member name="P:Dimebrain.TweetSharp.Service.TwitterService.RateLimitStatus">
            <summary>
            Gets the <see cref="T:Dimebrain.TweetSharp.Model.TwitterRateLimitStatus"/> of the last call made to the Twitter API.
            If the rate limit status was indeterminate on the last call, this is null.
            </summary>
            <value>The rate limit status based on the last successful API call.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Service.TwitterService.Result">
            <summary>
            Gets the <see cref="T:Dimebrain.TweetSharp.Model.TwitterResult"/> of the last call made to the Twitter API.
            </summary>
            <value>The result based on the last API call.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerUser">
            <summary>
            Represents a Yammer User (full details)
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.Location">
            <summary>
            The user's location
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.BirthDate">
            <summary>
            The user's birth date
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.HireDate">
            <summary>
            The date the user was hired
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.Interests">
            <summary>
            The user's interests
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.Expertise">
            <summary>
            The user's expertise
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.Summary">
            <summary>
            Summary text from the user's profile
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.TimeZone">
            <summary>
            the current timezone of the user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.State">
            <summary>
            value indicating the user's active state
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.NetworkId">
            <summary>
            the id of the network that this user belongs to
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.NetworkDomains">
            <summary>
            List of applicable network domains
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.Schools">
            <summary>
            list of schools attended by this user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.PreviousCompanies">
            <summary>
            list of previous companies that employed this user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerUser.ExternalUrls">
            <summary>
            List of external web addresses for the user (homepage, blog, etc)
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.TwitterUser">
            <summary>
            This data class provides more information than the basic data provided by
            <see cref="T:Dimebrain.TweetSharp.Model.TwitterUser"/> returned in other calls for friends and followers.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterUser.op_Equality(Dimebrain.TweetSharp.Model.TwitterUser,Dimebrain.TweetSharp.Model.TwitterUser)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterUser.op_Inequality(Dimebrain.TweetSharp.Model.TwitterUser,Dimebrain.TweetSharp.Model.TwitterUser)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.Twitter.Authentication.AuthenticationMode">
            <summary>
            Authentication mode to use
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.Twitter.Authentication.AuthenticationMode.Basic">
            <summary>
            Use Basic Auth
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.Twitter.Authentication.AuthenticationMode.OAuth">
            <summary>
            Use the OAuth Protocol
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsStatuses.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsStatuses"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsGet.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsGet"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.FluentTwitter">
            <summary>
            This is the main fluent class for building expressions
            bound for the Twitter API.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentTwitter.SetClientInfo(Dimebrain.TweetSharp.TwitterClientInfo)">
            <summary>
            Sets the client info.
            </summary>
            <param name="clientInfo">The client info.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentTwitter.Request">
            <summary>
            Makes a sequential call to Twitter to get the results of this query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentTwitter.RequestAsync">
            <summary>
            Sends the query asynchronously.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentTwitter.CreateRequest(Dimebrain.TweetSharp.TwitterClientInfo)">
            <summary>
            Creates a new composable query, using a specified client and a default platform.
            </summary>
            <param name="clientInfo">The client making the request</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentTwitter.CreateRequest">
            <summary>
            Creates a new composable query, using the default client and platform.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.FluentTwitter.ToString">
            <summary>
            Returns the human-readable query to Twitter representing the current expression.
            If you are storing URLs for sending later, you can use <code>AsUrl()</code> to return
            a URL-encoded string instead.
            </summary>
            <returns>A URL-decoded string representing this expression's query to Twitter</returns>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.AuthenticationPair">
            <summary>
            Gets the authentication pair used to authenticate to twitter.
            </summary>
            <value>The authentication pair, typically a username and password or a oauth token and tokensecret.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.SecondaryAuthenticationPair">
            <summary>
            Gets the authentication pair used to authenticate to 3rd party services such as image hosts
            </summary>
            <value>The authentication pair, typically a username and password or a oauth token and tokensecret.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.HasAuth">
            <summary>
            Gets a value indicating whether this instance has authentication data present.
            </summary>
            <value><c>true</c> if this instance has authentication data; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Authentication">
            <summary>
            Gets or sets the authentication.
            </summary>
            <value>The authentication.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.SecondaryAuthentication">
            <summary>
            Gets or sets the secondary authentication.
            </summary>
            <value>The secondary authentication.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.CacheKey">
            <summary>
            Returns the key prepended to the URL when caching queries.
            If using basic authentication, this will be the authenticated user's username.
            If using OAuth, this will be the authenticated token.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Profile">
            <summary>
            Gets or sets the profile.
            </summary>
            <value>The profile.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Configuration">
            <summary>
            Gets or sets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.SearchParameters">
            <summary>
            Gets or sets the search parameters.
            </summary>
            <value>The search parameters.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.ClientInfo">
            <summary>
            Gets or sets the client info.
            </summary>
            <value>The client info.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.HasError">
            <summary>
            Gets a value indicating whether the last request resulted in an error.
            </summary>
            <value><c>true</c> if the last request resulted in an error; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.RateLimitStatus">
            <summary>
            Gets the rate limit status.
            </summary>
            <value>The rate limit status.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Response">
            <summary>
            Gets or sets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Callback">
            <summary>
            Gets or sets the callback.
            </summary>
            <value>The callback.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Fluent.FluentTwitter.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterFavoritesCreate">
            <summary>
            Interface for nodes that create favorites. 
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.TwitterDateFormat">
            <summary>
            Represents the possible known date formats that Twitter reports.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.TwitterDateFormat.RestApi">
            <summary>
            RestApi
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.TwitterDateFormat.SearchApi">
            <summary>
            SearchApi
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.TwitterDateFormat.Atom">
            <summary>
            Atom
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.TwitterDateFormat.XmlHashesAndRss">
            <summary>
            XmlHashesAndRss
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.TwitterDateFormat.TrendsCurrent">
            <summary>
            TrendsCurrent
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.TwitterDateFormat.TrendsDaily">
            <summary>
            TrendsDaily
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.TwitterDateFormat.TrendsWeekly">
            <summary>
            TrendsWeekly
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow">
            <summary>
            A class to encapsulate OAuth authentication flow.
            <seealso cref="!:http://oauth.net/core/1.0#anchor9"/>
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.BuildRequestTokenInfo(Dimebrain.TweetSharp.Core.Web.WebMethod)">
            <summary>
            Generates a <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQueryInfo"/> instance to pass to an
            <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery"/> for the purpose of requesting an
            unauthorized request token.
            </summary>
            <param name="method">The HTTP method for the intended request</param>
            <seealso cref="!:http://oauth.net/core/1.0#anchor9"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.BuildRequestTokenInfo(Dimebrain.TweetSharp.Core.Web.WebMethod,Dimebrain.TweetSharp.Core.Web.WebParameterCollection)">
            <summary>
            Generates a <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQueryInfo"/> instance to pass to an
            <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery"/> for the purpose of requesting an
            unauthorized request token.
            </summary>
            <param name="method">The HTTP method for the intended request</param>
            <param name="parameters">Any existing, non-OAuth query parameters desired in the request</param>
            <seealso cref="!:http://oauth.net/core/1.0#anchor9"/>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.BuildAccessTokenInfo(Dimebrain.TweetSharp.Core.Web.WebMethod)">
            <summary>
            Generates a <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQueryInfo"/> instance to pass to an
            <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery"/> for the purpose of exchanging a request token
            for an access token authorized by the user at the Service Provider site.
            </summary>
            <param name="method">The HTTP method for the intended request</param>
            <seealso cref="!:http://oauth.net/core/1.0#anchor9"/>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.BuildAccessTokenInfo(Dimebrain.TweetSharp.Core.Web.WebMethod,Dimebrain.TweetSharp.Core.Web.WebParameterCollection)">
            <summary>
            Generates a <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQueryInfo"/> instance to pass to an
            <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery"/> for the purpose of exchanging a request token
            for an access token authorized by the user at the Service Provider site.
            </summary>
            <param name="method">The HTTP method for the intended request</param>
            <seealso cref="!:http://oauth.net/core/1.0#anchor9"/>
            <param name="parameters">Any existing, non-OAuth query parameters desired in the request</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.BuildClientAuthAccessTokenInfo(Dimebrain.TweetSharp.Core.Web.WebMethod,Dimebrain.TweetSharp.Core.Web.WebParameterCollection)">
            <summary>
            Generates a <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQueryInfo"/> instance to pass to an
            <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery"/> for the purpose of exchanging user credentials
            for an access token authorized by the user at the Service Provider site.
            </summary>
            <param name="method">The HTTP method for the intended request</param>
            <seealso cref="!:http://tools.ietf.org/html/draft-dehora-farrell-oauth-accesstoken-creds-00#section-4"/>
            <param name="parameters">Any existing, non-OAuth query parameters desired in the request</param>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.RequestTokenUrl">
            <summary>
            The request token url.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#request_urls"/>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.AccessTokenUrl">
            <summary>
            The access token url.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#request_urls"/>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.OAuth.OAuthWorkflow.UserAuthorizationUrl">
            <summary>
            THe user authorization url.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#request_urls"/>
        </member>
        <member name="T:Dimebrain.TweetSharp.Service.TwitterCursorList`1">
            <summary>
            A generic collection that also contains any cursor data necessary for paging
            using Twitter's cursor feature.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerPhoneNumber">
            <summary>
            Represent's a contact phone number for a user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerPhoneNumber.NumberType">
            <summary>
            The type of phone number. (Primary, personal, etc.)
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerPhoneNumber.Number">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerNetworkDomain">
            <summary>
            A network domain
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerNetworkDomain.NetworkDomain">
            <summary>
            the domain name
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.YammerClientInfo.ClientName">
            <summary>
            This is the name of your client application. It is used to
            identify your client when a user updates their status
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.YammerClientInfo.ClientVersion">
            <summary>
            This is the version of your application. This is meta-data only,
            and not used by Yammer for client processing.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.YammerClientInfo.ClientUrl">
            <summary>
            This is the URL of your application. This is meta-data only,
            and not used by Yammer for client processing. Your application's URL
            is stored by Yammer when you register your application for OAuth.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.YammerClientInfo.ConsumerKey">
            <summary>
            If your client is using OAuth authentication, this value should be set
            to the value of your consumer key. This avoids having to provide the key
            in every query.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Dimebrain.TweetSharp.YammerClientInfo.ConsumerSecret" -->
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsMembersDelete.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsMembers"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.OAuth.OAuthParameterHandling">
            <summary>
            Methods of including OAuth parameters in a signed request.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#signing_process"/>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.OAuth.OAuthParameterHandling.HttpAuthorizationHeader">
            <summary>
            OAuth parameters are served in the HTTP Authorization header.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.OAuth.OAuthParameterHandling.UrlOrPostParameters">
            <summary>
            OAuth parameters are part of the URI, if using GET, or sent
            as POST parameters, if using POST.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Exceptions.TwitterException">
            <summary>
            An exception raised when an error is received from the Twitter API
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Caching.AspNetCache">
            <summary>
            The ASP.NET Cache system implemented behind <see cref="T:Dimebrain.TweetSharp.Core.Caching.IWebCache"/>
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsMembers.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsMembers"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.OAuthToken">
            <summary>
            A data class representing either a request or an access token returned during an OAuth session.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.OAuthToken.Token">
            <summary>
            Gets or sets the token.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.OAuthToken.TokenSecret">
            <summary>
            Gets or sets the token secret.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.OAuthToken.CallbackConfirmed">
            <summary>
            Gets or sets a value indicating whether the callback was confirmed.
            This value is only populated if request token authorization was requested with a callback.
            </summary>
            <value><c>true</c> if the callback was confirmed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.OAuthToken.UserId">
            <summary>
            Gets or sets the user ID.
            This value is only populated if client authentication was used.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.OAuthToken.ScreenName">
            <summary>
            Gets or sets the user screen name.
            This value is only populated if client authentication was used.
            </summary>
            <value>The user screen name.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerResponseMetadata">
            <summary>
            Class representing an attachment to a yammer message
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResponseMetadata.RequestedPollInterval">
            <summary>
            The amount of time (in seconds) that Yammer requests you wait between polls
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerResponseMetadata.CurrentUserId">
            <summary>
            the ID of the user who made the request
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsSubscriptions.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsSubscriptions"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsShow.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsShow"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.Query.Basic.BasicAuthWebQuery">
            <summary>
            A web query engine for making requests that use basic HTTP authorization.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase">
            <summary>
            A general-purpose web query engine. Supports asynchronous calls, caching,
            and dynamic header / parameter generation.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.client_OpenReadCompleted(System.Object,System.Net.OpenReadCompletedEventArgs)">
            <summary>
            Handles the OpenReadCompleted event of the client control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Net.OpenReadCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.OnQueryResponse(Dimebrain.TweetSharp.Core.Web.WebQueryResponseEventArgs)">
            <summary>
            Raises the <see cref="E:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.QueryResponse"/> event.
            </summary>
            <param name="args">The <see cref="T:Dimebrain.TweetSharp.Core.Web.WebQueryResponseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.OnQueryRequest(Dimebrain.TweetSharp.Core.Web.WebQueryRequestEventArgs)">
            <summary>
            Raises the <see cref="E:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.QueryRequest"/> event.
            </summary>
            <param name="args">The <see cref="T:Dimebrain.TweetSharp.Core.Web.WebQueryRequestEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.Result">
            <summary>
            Gets or sets the last query result.
            </summary>
            <value>The result of the query.</value>
        </member>
        <member name="E:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.QueryRequest">
            <summary>
            Occurs when a web query request is sent.
            </summary>
        </member>
        <member name="E:Dimebrain.TweetSharp.Core.Web.Query.WebQueryBase.QueryResponse">
            <summary>
            Occurs when a web query response is received.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Caching.SimpleCache">
            <summary>
            A basic in-memory cache.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Service.TwitterCacheMode">
            <summary>
            Possible caching strategies.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Service.TwitterCacheMode.None">
            <summary>
            The cache is not used.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Service.TwitterCacheMode.AbsoluteExpiration">
            <summary>
            The cache uses an absolute expiration.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Service.TwitterCacheMode.SlidingExpiration">
            <summary>
            The cache uses a sliding expiration.
            This means after a specified timespan is reached without
            cache activity for a key, it is invalidated.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsSubscribersCreate.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsSubscribers"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsDelete.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsDelete"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterWonkyBooleanConverter">
            <summary>
            Sometimes Twitter returns "0" for "true", instead of true, and we've even seen
            "13" for true. For those, and possibly future issues, this converter exists.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.WebParameter">
            <summary>
             A name value pair used in web requests.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebParameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Web.WebParameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.WebParameter.Value">
            <summary>
             The parameter value.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.WebParameter.Name">
            <summary>
            The parameter name.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterSavedSearches.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterSavedSearches"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsMembersCreate.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsMembers"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerAttachmentType">
            <summary>
            The type of yammer attachment
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.YammerAttachmentType.Image">
            <summary>
            Image attachment
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.YammerAttachmentType.File">
            <summary>
            File attachment
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions">
            <summary>
            Extension methods for the IFluentTwitter Interface
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Statuses(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Statuses" (aka. Tweets) subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterStatuses instance with methods for dealing with Statuses</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Users(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Users" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterUsers instance with methods for dealing with Users</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.ReportSpam(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Spam" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterSpam instance with methods for dealing with Spam</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.DirectMessages(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Direct Messages" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterDirectMessages instance with methods for dealing with Direct Messages</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Friendships(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Friendships" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterFriendships instance with methods for dealing with Friendships</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.SocialGraph(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Social Graph" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterSocialGraph instance with methods for dealing with the Social Graph</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Account(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Account" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterAccount instance with methods for dealing with Accounts</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Favorites(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Favorites" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterFavoites instance with methods for dealing with Favorites</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Notifications(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Notifications" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterNotifications instance with methods for dealing with Notifications</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Blocking(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Blocking" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterBlocks instance with methods for adding/removing Blocks</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.SavedSearches(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Saved Searches" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterSavedSearches instance with methods for querying the twitter service status</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Help(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the "Help" subset of the REST API
            </summary>
            <param name="instance">The instance.</param>
            <returns>An ITwitterHelp instance with methods for querying the twitter service status</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Search(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the Search API
            </summary>
            <param name="instance">The instance.</param>
            <returns>A ITwitterSearch instance with methods for performing searches</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Photos(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the Photo Posting features
            </summary>
            <param name="instance">The instance.</param>
            <returns>A <see cref="T:Dimebrain.TweetSharp.Fluent.ITwitterPhotos"/> instance with methods for performing photo posting</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Direct(Dimebrain.TweetSharp.Fluent.IFluentTwitter,System.String)">
            <summary>
            Accesses the raw URL path provided, rather than using a fluent interface.
            This method is meant as a safety mechanism when the Twitter API changes, but
            TweetSharp doesn't currently reflect the change.
            </summary>
            <param name="instance">The instance.</param>
            <param name="urlPath">The raw URL path, i.e. "/users/show/bob.xml"</param>
            <returns>A IFluentTwitterDirect instance with methods for performing searches</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Lists(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Accesses the Twitter Lists features
            </summary>
            <param name="instance">The instance.</param>
            <returns>A <see cref="T:Dimebrain.TweetSharp.Fluent.ITwitterLists"/> instance with methods for performing list handling</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.AsUrl(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Builds a URL from the specified fluent expression instance.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.CallbackTo(Dimebrain.TweetSharp.Fluent.IFluentTwitter,Dimebrain.TweetSharp.Fluent.TwitterWebCallback)">
            <summary>
            Calling this method will establish the asynchronous callback used when the request receives a response.
            </summary>
            <param name="instance">The current location in the fluent expression</param>
            <param name="callback">The callback executed when a request completes in the background</param>
            <returns>The current location in the fluent expression</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.IFluentTwitterExtensions.Expect(Dimebrain.TweetSharp.Fluent.IFluentTwitter,System.Collections.Generic.IEnumerable{Dimebrain.TweetSharp.Model.IModel})">
            <summary>
            Calling this method will enable mocking support, and return the Twitter object graph
            specified when the request is executed. 
            </summary>
            <param name="graph">A graph of objects expected in the response</param>
            <returns>The current location in the fluent expression</returns>
            <param name="instance">The current location in the fluent expression</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerMessageType">
            <summary>
            The type of yammer message
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.YammerMessageType.Update">
            <summary>
            An update type message
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerMessageBody">
            <summary>
            Represents the body of a yammer message
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageBody.Plain">
            <summary>
            Gets or sets the unparsed version of the yammer message body.
            </summary>
            <value>String representing the unparsed version of the yammer message body.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerMessageBody.Parsed">
            <summary>
            Gets or sets the unparsed version of the yammer message body.
            </summary>
            <value>String representing the unparsed version of the yammer message body.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.OAuth.OAuthSignatureMethod">
            <summary>
            Hashing strategies supported by OAuth.
            </summary>
            <seealso cref="!:http://oauth.net/core/1.0#signing_process"/>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.OAuth.OAuthSignatureMethod.PlainText">
            <summary>
            Plain text is only permitted when combined with the HTTPS protocol.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.OAuth.OAuthSignatureMethod.HmacSha1">
            <summary>
            Uses HMAC-SHA1 for signing requests.
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Core.OAuth.OAuthSignatureMethod.RsaSha1">
            <summary>
            Uses RSA-SHA1 for signing requests.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerSchool">
            <summary>
            Details about a school attended by a Yammer user. 
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerSchool.School">
            <summary>
            the name of the school
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerSchool.Degree">
            <summary>
            Degree attained at this school
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerSchool.Description">
            <summary>
            Description of the program attended
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerSchool.StartYear">
            <summary>
            The first year the user attended this school
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerSchool.EndYear">
            <summary>
            The last year the user attended this school
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerImInfo.UserName">
            <summary>
            User's name or ID in the IM system
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerImInfo.Provider">
            <summary>
            the IM network
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.WebCredentials">
            <summary>
            A lighter-weight basic credentials object to avoid using <see cref="T:System.Net.NetworkCredential"/>
            in partial trust scenarios.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebCredentials.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Web.WebCredentials"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.WebCredentials.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.WebCredentials.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerSenderType">
            <summary>
            The type of yammer sender
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.YammerSenderType.User">
            <summary>
            Sender is a user
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Model.YammerSenderType.Guide">
            <summary>
            Sender is a guide
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphExtensions">
            <summary>
            Extension methods for querying the SocialGraph
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterSocialGraphExtensions.Ids(Dimebrain.TweetSharp.Fluent.ITwitterSocialGraph)">
            <summary>
            Gets user IDs
            </summary>
            <param name="instance">The instance.</param>
            <returns>the instance</returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterFavoritesGet">
            <summary>
            Interface for nodes that get twitter favorites
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Tasks.TimedTask">
            <summary>
            Class representing a recurring task
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Tasks.ITimedTask.Stop">
            <summary>
            Stops this task instance.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Tasks.ITimedTask.Start">
            <summary>
            Starts this task instance.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Tasks.ITimedTask.Start(System.TimeSpan,System.TimeSpan)">
            <summary>
            Starts this task instance.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.ITimedTask.Action">
            <summary>
            Gets or sets the action to perform periodically.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.ITimedTask.Exception">
            <summary>
            The last exception that occurred during a timed action.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.ITimedTask.RateLimited">
            <summary>
            True if the task has an associated RateLimiting rule
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.ITimedTask.RateLimitingRule">
            <summary>
            The associated rate limit rule
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Tasks.TimedTask.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int32,Dimebrain.TweetSharp.Core.Tasks.IRateLimitingRule,System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Tasks.TimedTask"/> class.
            </summary>
            <param name="due">The next time to perform the task.</param>
            <param name="interval">The recurrance interval for the task.</param>
            <param name="continueOnError">if set to <c>true</c> [continue on error].</param>
            <param name="iterations">The number of times to perform the task. If zero, performs the task continuously.</param>
            <param name="rateLimitingRule">The rule to use for ratelimiting this periodic task</param>
            <param name="action">The action to perform.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Tasks.TimedTask.Stop">
            <summary>
            Stops this task instance.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Tasks.TimedTask.Start">
            <summary>
            Starts this task instance.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.TimedTask.Action">
            <summary>
            Gets or sets the action to perform periodically.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.TimedTask.Exception">
            <summary>
            The last exception that occurred during a timed action.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Tasks.TimedTask.RateLimited">
            <summary>
            true if this task is using rate limiting
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.ITwitterEntity">
            <summary>
            Interface for a twitter object that contans an ID and CreatedDate
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.ITwitterEntity.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.ITwitterEntity.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterDateTimeConverter">
            <summary>
            Converts incoming time data from Twitter.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <param name="serializer">The serializer.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.Twitter.Converters.TwitterDateTimeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery">
            <summary>
            A web query engine for OAuth requests.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery.#ctor(Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQueryInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery"/> class.
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery.Realm">
            <summary>
            Gets or sets the HTTP Realm.
            </summary>
            <value>The realm.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQuery.ParameterHandling">
            <summary>
            Gets or sets the parameter handling.
            </summary>
            <value>The parameter handling.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Caching.CacheFactory">
            <summary>
            The default cache factory for creating new caches. TweetSharp
            supports caches that implement <see cref="T:Dimebrain.TweetSharp.Core.Caching.IClientCache"/>.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Caching.CacheFactory.AspNetCache">
            <summary>
            Gets the ASP.NET cache.
            </summary>
            <value>The ASP.NET cache.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Caching.CacheFactory.InMemoryCache">
            <summary>
            Gets a simple in-memory cache.
            </summary>
            <value>The in memory cache.</value>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsSubscribersDelete.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsSubscribers"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.YammerAttachment">
            <summary>
            Class representing an attachment to a yammer message
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerAttachment.AttachmentType">
            <summary>
            Gets or sets the type of attachment
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerAttachment.Id">
            <summary>
            Gets or sets the id of the attachment.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerAttachment.Name">
            <summary>
            Gets or sets the name of the attachment
            </summary>
            <value>The name of the attachment.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerAttachment.WebUrl">
            <summary>
            Gets or sets the web URL for the attachment
            </summary>
            <value>The web URL.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.ITweetable">
            <summary>
            Represents a social micro-update.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.TextHtml">
            <summary>
            Calculates the HTML value of the <see cref="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.Text"/>
            by parsing URLs, mentions, and hashtags into anchors.
            </summary>
            <value>The HTML text.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.TextLinks">
            <summary>
            Returns the URLs embedded in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.Text"/> value.
            </summary>
            <value>The <see cref="T:System.Uri"/> values embedded in <see cref="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.Text"/>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.TextMentions">
            <summary>
            Returns the <see cref="P:Dimebrain.TweetSharp.Model.TwitterUser.ScreenName"/> values mentioned in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.Text"/> value.
            </summary>
            <value>The <see cref="P:Dimebrain.TweetSharp.Model.TwitterUser.ScreenName"/> values mentioned in <see cref="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.Text"/>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.TextHashtags">
            <summary>
            Returns the hashtag values used in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.Text"/> value.
            </summary>
            <value>The hashtag values used in <see cref="P:Dimebrain.TweetSharp.Model.TwitterDirectMessage.Text"/>.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.WebQueryClient">
            <summary>
            A web query instance that tracks its <see cref="T:System.Net.WebRequest"/>
            and <see cref="T:System.Net.WebResponse"/> pair in order to inform a consumer.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.GetWebRequestShim(System.Uri)">
            <summary>
            Gets the web request shim.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.GetWebResponseShim(System.Net.WebRequest)">
            <summary>
            Gets the web response shim.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.GetWebResponseShim(System.Net.WebRequest,System.IAsyncResult)">
            <summary>
            Gets the web response shim.
            </summary>
            <param name="request">The request.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.GetWebRequest(System.Uri)">
            <summary>
            Returns a <see cref="T:System.Net.WebRequest"/> object for the specified resource.
            </summary>
            <param name="address">A <see cref="T:System.Uri"/> that identifies the resource to request.</param>
            <returns>
            A new <see cref="T:System.Net.WebRequest"/> object for the specified resource.
            </returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.Dimebrain#TweetSharp#Core#Web#IWebQueryClient#OpenReadAsync(System.Uri)">
            <summary>
            A web query instance that tracks its <see cref="T:System.Net.WebRequest"/>
            and <see cref="T:System.Net.WebResponse"/> pair in order to inform a consumer.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.Dimebrain#TweetSharp#Core#Web#IWebQueryClient#OpenReadAsync(System.Uri,System.Object)">
            <summary>
            A web query instance that tracks its <see cref="T:System.Net.WebRequest"/>
            and <see cref="T:System.Net.WebResponse"/> pair in order to inform a consumer.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.Dimebrain#TweetSharp#Core#Web#IWebQueryClient#add_OpenReadCompleted(System.Net.OpenReadCompletedEventHandler)">
            <summary>
            A web query instance that tracks its <see cref="T:System.Net.WebRequest"/>
            and <see cref="T:System.Net.WebResponse"/> pair in order to inform a consumer.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.Dimebrain#TweetSharp#Core#Web#IWebQueryClient#remove_OpenReadCompleted(System.Net.OpenReadCompletedEventHandler)">
            <summary>
            A web query instance that tracks its <see cref="T:System.Net.WebRequest"/>
            and <see cref="T:System.Net.WebResponse"/> pair in order to inform a consumer.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.Dimebrain#TweetSharp#Core#Web#IWebQueryClient#OpenRead(System.String)">
            <summary>
            A web query instance that tracks its <see cref="T:System.Net.WebRequest"/>
            and <see cref="T:System.Net.WebResponse"/> pair in order to inform a consumer.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.WebQueryClient.Dimebrain#TweetSharp#Core#Web#IWebQueryClient#CancelAsync">
            <summary>
            A web query instance that tracks its <see cref="T:System.Net.WebRequest"/>
            and <see cref="T:System.Net.WebResponse"/> pair in order to inform a consumer.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.GeoLocation">
            <summary>
             Represents a geospatial location, for APIs that support it.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Model.GeoLocation"/> struct.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.Equals(Dimebrain.TweetSharp.Model.GeoLocation)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="instance">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.op_Equality(Dimebrain.TweetSharp.Model.GeoLocation,Dimebrain.TweetSharp.Model.GeoLocation)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.op_Inequality(Dimebrain.TweetSharp.Model.GeoLocation,Dimebrain.TweetSharp.Model.GeoLocation)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.op_Explicit(Dimebrain.TweetSharp.Model.GeoLocation)~System.Double[]">
            <summary>
            Performs an explicit conversion from <see cref="T:Dimebrain.TweetSharp.Model.GeoLocation"/> to <see cref="!:System.Double[]"/>.
            </summary>
            <param name="location">The location.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.op_Implicit(System.Collections.Generic.List{System.Double})~Dimebrain.TweetSharp.Model.GeoLocation">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Double"/> to <see cref="T:Dimebrain.TweetSharp.Model.GeoLocation"/>.
            </summary>
            <param name="values">The values.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.op_Implicit(System.Double[])~Dimebrain.TweetSharp.Model.GeoLocation">
            <summary>
            Performs an implicit conversion from <see cref="!:System.Double[]"/> to <see cref="T:Dimebrain.TweetSharp.Model.GeoLocation"/>.
            </summary>
            <param name="values">The values.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.GeoLocation.FromEnumerable(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Froms the enumerable.
            </summary>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.GeoLocation.Latitude">
            <summary>
            Gets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.GeoLocation.Longitude">
            <summary>
            Gets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions">
            <summary>
            Methods for the Twitter Lists API
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetListsBy(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String)">
            <summary>
            Gets lists belonging to the specified owner.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetListBy(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String)">
            <summary>
            Gets a single list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listSlug">The list slug.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetListBy(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64)">
            <summary>
            Gets a single list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listId">The list ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetListBy(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32)">
            <summary>
            Gets a single list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listId">The list ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.DeleteList(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64)">
            <summary>
            Deletes a list.
            The authenticating user must be the owner of the list to delete it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listId">The list ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.DeleteList(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String)">
            <summary>
            Deletes a list.
            The authenticating user must be the owner of the list to delete it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listSlug">The list slug.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.DeleteList(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Deletes a list.
            The authenticating user must be the owner of the list to delete it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.CreatePublicList(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String,System.String)">
            <summary>
            Creates a public list.
            The authenticating user must be the owner of the list to create it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listName">Name of the list.</param>
            <param name="listDescription">The list description.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.CreatePublicList(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Creates a public list.
            The authenticating user must be the owner of the list to create it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.CreatePrivateList(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String,System.String)">
            <summary>
            Creates a private list.
            The authenticating user must be the owner of the list to create it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listName">The name of the list.</param>
            <param name="listDescription">The list description.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.CreatePrivateList(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Creates a private list.
            The authenticating user must be the owner of the list to create it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.UpdateList(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Updates the given list. 
            The authenticating user must be the owner of the list to update it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetStatuses(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32)">
            <summary>
            Gets the status timeline of a specified list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetStatuses(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64)">
            <summary>
            Gets the status timeline of a specified list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetStatuses(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String)">
            <summary>
            Gets the status timeline of a specified list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listSlug">The list slug.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetMemberships(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String)">
            <summary>
            Gets the lists the list owner is listed on.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetSubscriptions(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String)">
            <summary>
            Gets the lists the list owner follows.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetMembersOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32)">
            <summary>
            Gets the users that are members of a given list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetMembersOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String)">
            <summary>
            Gets the users that are members of a given list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listSlug">The list slug.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetMembersOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64)">
            <summary>
            Gets the users that are members of a given list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner screen name.</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetMembersOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Gets the users that are members of a given list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetSubscribersOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64)">
            <summary>
            Gets the followers of a list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name.</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.GetSubscribersOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Gets the followers of a list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.IsUserMemberOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList,Dimebrain.TweetSharp.Model.TwitterUser)">
            <summary>
            Determines whether a list contains a user.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.IsUserMemberOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32,System.Int32)">
            <summary>
            Determines whether a list contains a user.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The ID of the list to test for membership.</param>
            <param name="userId">The ID of the user to check for within the list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.IsUserMemberOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64,System.Int64)">
            <summary>
            Determines whether a list contains a user.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The ID of the list to test for membership.</param>
            <param name="userId">The ID of the user to check for within the list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.IsUserFollowerOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList,Dimebrain.TweetSharp.Model.TwitterUser)">
            <summary>
            Determines whether a user follows a list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.IsUserFollowerOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32,System.Int32)">
            <summary>
            Determines whether a user follows a list.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The ID of the list to test for a subscription.</param>
            <param name="userId">The ID of the user to check against  the list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.IsUserFollowerOf(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64,System.Int64)">
            <summary>
            Determines whether the given user is a subscriber of the the specified list
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The ID of the list to test for a subscription.</param>
            <param name="userId">The ID of the user to check against the list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.AddMemberTo(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList,Dimebrain.TweetSharp.Model.TwitterUser)">
            <summary>
            Adds a new list member.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.AddMemberTo(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64,System.Int64)">
            <summary>
            Adds a new list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.AddMemberTo(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String,System.Int64)">
            <summary>
            Adds a new list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listSlug">The list slug.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.AddMemberTo(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String,System.Int32)">
            <summary>
            Adds a new list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listSlug">The list slug.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.AddMemberTo(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32,System.Int32)">
            <summary>
            Adds a new list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.RemoveMemberFrom(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList,Dimebrain.TweetSharp.Model.TwitterUser)">
            <summary>
            Removes a list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.RemoveMemberFrom(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64,System.Int64)">
            <summary>
            Removes a list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.RemoveMemberFrom(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String,System.Int64)">
            <summary>
            Removes a list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listSlug">The list slug.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.RemoveMemberFrom(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String,System.Int32)">
            <summary>
            Removes a list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listSlug">The list slug.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.RemoveMemberFrom(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32,System.Int32)">
            <summary>
            Removes a list member.
            The authenticating user must be the owner of the list to change it.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Follow(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64)">
            <summary>
            Adds a list to the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Follow(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32)">
            <summary>
            Adds a list to the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Follow(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String)">
            <summary>
            Adds a list to the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listSlug">The list slug.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Follow(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Adds a list to the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Unfollow(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int64)">
            <summary>
            Removes a list from the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Unfollow(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.Int32)">
            <summary>
            Removes a list from the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listId">The list id.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Unfollow(Dimebrain.TweetSharp.Fluent.ITwitterLists,System.String,System.String)">
            <summary>
            Removes a list from the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="listOwnerScreenName">The list owner's screen name</param>
            <param name="listSlug">The list slug.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.ITwitterListsExtensions.Unfollow(Dimebrain.TweetSharp.Fluent.ITwitterLists,Dimebrain.TweetSharp.Model.TwitterList)">
            <summary>
            Removes a list from the authenticating user's followed lists.
            </summary>
            <param name="instance">The instance.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsIsMember.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsIsMember"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.TwitterClientInfo">
            <summary>
             This class provides meta-data for your specific Twitter application, that is
             used to identify your client to Twitter, store OAuth credentials for all future
             request, and in some cases define a transparent proxy to redirect API calls to.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.TwitterClientInfo.ClientName">
            <summary>
            This is the name of your client application. It is used to
            identify your client when a user updates their status, or when
            your application makes a Twitter Search API request.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.TwitterClientInfo.ClientVersion">
            <summary>
            This is the version of your application. This is meta-data only,
            and not used by Twitter for client processing.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.TwitterClientInfo.ClientUrl">
            <summary>
            This is the URL of your application. This is meta-data only,
            and not used by Twitter for client processing. Your application's URL
            is stored by Twitter when you apply for a 'Source' attribute or register
            your application for OAuth.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.TwitterClientInfo.ConsumerKey">
            <summary>
            If your client is using OAuth authentication, this value should be set
            to the value of your consumer key. This avoids having to provide the key
            in every query.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.TwitterClientInfo.ConsumerSecret">
            <summary>
            If your client is using OAuth authentication, this value should be set
            to the value of your consumer secret. This avoids having to provide the secret
            in every query.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.WebCallback">
            <summary>
            Represents a callback from an API call.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.SocialGraph.Extensions">
            <summary>
            Extension methods for the SocialGraph APIs
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Extensions.GeoExtensions.IsWithin(Dimebrain.TweetSharp.Model.GeoLocation,System.Double,Dimebrain.TweetSharp.Model.GeoLocation)">
            <summary>
            Determines whether the specified source is within.
            </summary>
            <param name="source">The source.</param>
            <param name="miles">The miles.</param>
            <param name="target">The target.</param>
            <returns>
            	<c>true</c> if the specified source is within; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.TwitterResult">
            <summary>
            Represents a result returning from the Twitter API.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterResult.#ctor(Dimebrain.TweetSharp.Core.Web.Query.WebQueryResult,System.Net.WebException)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Model.TwitterResult"/> class.
            </summary>
            <param name="result">The result.</param>
            <param name="exception">The WebException that was caught during the query</param>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Model.TwitterResult"/> class.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.IsTwitterError">
            <summary>
            Gets a value indicating whether this result returned a Twitter error.
            </summary>
            <value><c>true</c> if this result is in error; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.IsFailWhale">
            <summary>
            Gets a value indicating whether this instance is a fail whale.
            </summary>
            <value>
            	<c>true</c> if this instance is a fail whale; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.IsFromCache">
            <summary>
            Gets a value indicating whether this result was served from a cache.
            </summary>
            <value>
            	<c>true</c> if this result is from a cache; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.IsFromStream">
            <summary>
            Gets a value indicating whether this result was served from a continuous stream.
            </summary>
            <value>
            	<c>true</c> if this result is from a stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.StreamedResponses">
            <summary>
            Gets or sets the streamed responses requested from the streaming API.
            </summary>
            <value>The streamed responses.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.Retries">
            <summary>
            Gets or sets a value indicating how many retries occured to get the current result
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.PreviousResult">
            <summary>
            Gets or sets the previous (failed) twitter result when an error condition caused a retry
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.ResponseLength">
            <summary>
            Gets or sets the length of the response.
            This length corresponds to the actual message size in bytes returned from Twitter. 
            </summary>
            <value>The length of the response.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.ResponseUri">
            <summary>
            Gets or sets the response URI.
            </summary>
            <value>The response URI.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.RateLimitStatus">
            <summary>
            Gets or sets the rate limit status, if it was available at the time of the response.
            </summary>
            <value>The rate limit status.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.RequestHttpMethod">
            <summary>
            Gets or sets the request HTTP method.
            </summary>
            <value>The request HTTP method.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.ResponseType">
            <summary>
            Gets or sets the MIME type of the response.
            </summary>
            <value>The type of the response.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.ResponseHttpStatusCode">
            <summary>
            Gets or sets the response HTTP status code.
            </summary>
            <value>The response HTTP status code.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.ResponseHttpStatusDescription">
            <summary>
            Gets or sets the response HTTP status description.
            </summary>
            <value>The response HTTP status description.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterResult.SkippedDueToRateLimiting">
            <summary>
            Gets or sets a flag indicating if the request was skipped for rate limiting rules. 
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.TwitterWebCallback">
            <summary>
            Represents a callback from an API call.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListsCreate.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListsCreate"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.TwitterSearchStatus">
            <summary>
            This data class represents a <see cref="T:Dimebrain.TweetSharp.Model.TwitterStatus"/> originating from a Search API result. 
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Model.TwitterSearchStatus.op_Implicit(Dimebrain.TweetSharp.Model.TwitterSearchStatus)~Dimebrain.TweetSharp.Model.TwitterStatus">
            <summary>
             This implicit conversion supports treating a search status as if it were a 
             regular <see cref="T:Dimebrain.TweetSharp.Model.TwitterStatus"/>. This is useful if you need to combine search
             results and regular results in the same UI context.
            </summary>
            <param name="searchStatus"></param>
            <returns></returns>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Id">
            <summary>
            The unique identifier for this status.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.TextHtml">
            <summary>
            Calculates the HTML value of the <see cref="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Text"/>
            by parsing URLs, mentions, and hashtags into anchors.
            </summary>
            <value>The HTML text.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.TextLinks">
            <summary>
            Returns the URLs embedded in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Text"/> value.
            </summary>
            <value>The <see cref="T:System.Uri"/> values embedded in <see cref="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Text"/>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.TextMentions">
            <summary>
            Returns the <see cref="P:Dimebrain.TweetSharp.Model.TwitterUser.ScreenName"/> values mentioned in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Text"/> value.
            </summary>
            <value>The <see cref="P:Dimebrain.TweetSharp.Model.TwitterUser.ScreenName"/> values mentioned in <see cref="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Text"/>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.TextHashtags">
            <summary>
            Returns the hashtag values used in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Text"/> value.
            </summary>
            <value>The hashtag values used in <see cref="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.Text"/>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.CreatedDate">
            <summary>
            The date the status was created.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.ToUserId">
            <summary>
            This represents the internal ID for the user who received a status in a search
            result. Keep in mind that this ID is currently meaningless to the Twitter API
            as it is not the same ID as the user's ID. It will eventually provide the
            correct ID for the target user.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterSearchStatus.FromUserId">
            <summary>
            This represents the internal ID for the user who wrote a status in a search
            result. Keep in mind that this ID is currently meaningless to the Twitter API
            as it is not the same ID as the user's ID. It will eventually provide the
            correct ID for the originating user.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Fluent.RetweetMode">
            <summary>
            Determines the possible ways to handle retweeting
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.RetweetMode.Native">
            <summary>
            Uses Twitter's Retweet API
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.RetweetMode.Prefix">
            <summary>
            Uses 'RT' at the beginning of an update, performed by TweetSharp
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.RetweetMode.SymbolPrefix">
            <summary>
            Uses a Unicode character (U2672) at the beginning of an update, performed by TweetSharp
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.RetweetMode.Suffix">
            <summary>
            Uses 'via (@screen_name)' at the end of an update, performed by TweetSharp
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerContactInfo.EmailAddresses">
            <summary>
            List of email addresses for this user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerContactInfo.PhoneNumbers">
            <summary>
            List of phone numbers for this user
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.YammerContactInfo.Im">
            <summary>
            Intstant-messaging contact info for this user
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Fluent.TwitterListTimeline.#ctor(Dimebrain.TweetSharp.Fluent.IFluentTwitter)">
            <summary>
            Initializes a new instance of the <see cref="T:Dimebrain.TweetSharp.Fluent.TwitterListTimeline"/> class.
            </summary>
            <param name="root">The root.</param>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.Services.SendPhotoServiceProvider.TwitPic">
            <summary>
            http://twitpic.com
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.Services.SendPhotoServiceProvider.YFrog">
            <summary>
            http://yfrog.com
            </summary>
        </member>
        <member name="F:Dimebrain.TweetSharp.Fluent.Services.SendPhotoServiceProvider.TwitGoo">
            <summary>
            http://twitgoo.com
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterStatus.TextHtml">
            <summary>
            Calculates the HTML value of the <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.Text"/>
            by parsing URLs, mentions, and hashtags into anchors.
            </summary>
            <value>The HTML text.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterStatus.TextLinks">
            <summary>
            Returns the URLs embedded in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.Text"/> value.
            </summary>
            <value>The <see cref="T:System.Uri"/> values embedded in <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.Text"/>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterStatus.TextMentions">
            <summary>
            Returns the <see cref="P:Dimebrain.TweetSharp.Model.TwitterUser.ScreenName"/> values mentioned in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.Text"/> value.
            </summary>
            <value>The <see cref="P:Dimebrain.TweetSharp.Model.TwitterUser.ScreenName"/> values mentioned in <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.Text"/>.</value>
        </member>
        <member name="P:Dimebrain.TweetSharp.Model.TwitterStatus.TextHashtags">
            <summary>
            Returns the hashtag values used in the <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.Text"/> value.
            </summary>
            <value>The hashtag values used in <see cref="P:Dimebrain.TweetSharp.Model.TwitterStatus.Text"/>.</value>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.Query.OAuth.OAuthWebQueryInfo">
            <summary>
            Mandatory and some optional oAuth parameters travelling with the request.
            <seealso cref="!:http://www.hueniverse.com/hueniverse/2008/10/beginners-gui-1.html"/>
            /// <seealso cref="!:http://tools.ietf.org/html/draft-dehora-farrell-oauth-accesstoken-creds-00#section-4"/>
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Core.Web.HttpPostParameter">
            <summary>
             A <see cref="T:Dimebrain.TweetSharp.Core.Web.WebParameter"/> that maps to HTTP POST
             parameters in an HTTP body.
            </summary>
        </member>
        <member name="M:Dimebrain.TweetSharp.Core.Web.HttpPostParameter.CreateFile(System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new HTTP POST parameter representing
             a file to transfer as multi-part form data.
            </summary>
            <param name="name">The logical name of the file</param>
            <param name="fileName">The physical file name</param>
            <param name="filePath">The path to the file</param>
            <param name="contentType">The file's content type</param>
            <returns>The created HTTP POST parameter</returns>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.HttpPostParameter.Type">
            <summary>
             The HTTP POST parameter type.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.HttpPostParameter.FileName">
            <summary>
            The physical file name.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.HttpPostParameter.FilePath">
            <summary>
            The path to the physical file.
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Core.Web.HttpPostParameter.ContentType">
            <summary>
            The content type of the file.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Service.TwitterFilterStreamOptions">
            <summary>
            Options for filtering the Twitter API Filter stream.
            </summary>
        </member>
        <member name="T:Dimebrain.TweetSharp.Service.TwitterSearchOptions">
            <summary>
            Options for filtering the Twitter API Filter stream.
            </summary>
            <seealso cref="!:http://apiwiki.twitter.com/Twitter-Search-API-Method%3A-search"/>
        </member>
        <member name="P:Dimebrain.TweetSharp.Service.TwitterSearchOptions.Location">
            <summary>
            Returns tweets by users located within a given radius of the given latitude/longitude.  
            The location is preferentially taking from the Geotagging API, 
            but will fall back to their Twitter profile. 
            
            You cannot use the near phrase operator via the API to geocode arbitrary locations 
            but you can use this geocode parameter to search near geocodes directly. 
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Service.TwitterSearchOptions.LocationRadiusMiles">
            <summary>
            Returns tweets by users located within a given radius of the given latitude/longitude.  
            The location is preferentially taking from the Geotagging API, 
            but will fall back to their Twitter profile. 
            
            You cannot use the near phrase operator via the API to geocode arbitrary locations 
            but you can use this geocode parameter to search near geocodes directly. 
            </summary>
        </member>
        <member name="P:Dimebrain.TweetSharp.Service.TwitterSearchOptions.LocaleIso">
            <summary>
            Specify the language of the query you are sending (only ja is currently effective). 
            This is intended for language-specific clients and the default should work
            in the majority of cases. 
            </summary>
            <seealso cref="!:http://en.wikipedia.org/wiki/ISO_639-1"/>
        </member>
        <member name="P:Dimebrain.TweetSharp.Service.TwitterSearchOptions.LanguageIso">
            <summary>
            Restricts tweets to the given language, given by an ISO 639-1 code. 
            </summary>
            <seealso cref="!:http://en.wikipedia.org/wiki/ISO_639-1"/>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.WhereOnEarthLocation">
            <summary>
            Represents a location in the Yahoo! WOE specification.
            </summary>
            <seealso cref="!:http://developer.yahoo.com/geo/geoplanet/"/>
        </member>
        <member name="T:Dimebrain.TweetSharp.Model.WhereOnEarthPlaceType">
            <summary>
            Represents a place type for a <see cref="T:Dimebrain.TweetSharp.Model.WhereOnEarthLocation"/> in the Yahoo! WOE specification.
            </summary>
            <seealso cref="!:http://developer.yahoo.com/geo/geoplanet/"/>
        </member>
    </members>
</doc>
